---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kafkas.clusters.instaclustr.com
spec:
  group: clusters.instaclustr.com
  names:
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    singular: kafka
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kafka is the Schema for the kafkas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaSpec defines the desired state of Kafka
            properties:
              allowDeleteTopics:
                type: boolean
              autoCreateTopics:
                type: boolean
              bundledUseOnlyCluster:
                description: running as dependency for another instance. need to be
                  tested before decide what to do with this field
                type: boolean
              clientToClusterEncryption:
                type: boolean
              clusterName:
                description: 'ClusterName [ 3 .. 32 ] characters. APIv2 : "name",
                  APIv1 : "clusterName".'
                type: string
              dataCentres:
                items:
                  properties:
                    name:
                      description: When use one data centre name of field is dataCentreCustomName
                        for APIv1
                      type: string
                    network:
                      type: string
                    nodeSize:
                      type: string
                    nodesNumber:
                      description: 'APIv2: numberOfNodes; APIv1: nodesPerRack.'
                      format: int32
                      type: integer
                    provider:
                      properties:
                        accountName:
                          type: string
                        customVirtualNetworkId:
                          type: string
                        diskEncryptionKey:
                          type: string
                        name:
                          type: string
                        resourceGroup:
                          type: string
                      required:
                      - name
                      type: object
                    racksNumber:
                      description: 'APIv2: replicationFactor; APIv1: numberOfRacks'
                      format: int32
                      type: integer
                    region:
                      description: 'Region. APIv1 : "dataCentre"'
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                  - network
                  - nodesNumber
                  - racksNumber
                  - region
                  type: object
                type: array
              dedicatedZookeeper:
                items:
                  properties:
                    zookeeperNodeCount:
                      format: int32
                      type: integer
                    zookeeperNodeSize:
                      type: string
                  required:
                  - zookeeperNodeCount
                  - zookeeperNodeSize
                  type: object
                type: array
              firewallRules:
                items:
                  properties:
                    network:
                      type: string
                    rules:
                      items:
                        properties:
                          type:
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                    securityGroupId:
                      type: string
                  required:
                  - rules
                  type: object
                type: array
              oidsProvider:
                type: string
              partitionsNumber:
                format: int32
                type: integer
              pciCompliance:
                description: "The PCI compliance standards relate to the security
                  of user data and transactional information. Can only be applied
                  clusters provisioned on AWS_VPC, running Cassandra, Kafka, Elasticsearch
                  and Redis. PCI compliance cannot be enabled if the cluster has Spark.
                  \n APIv1 : \"pciCompliantCluster,omitempty\"; APIv2 : pciComplianceMode."
                type: boolean
              privateLink:
                properties:
                  iamPrincipalARNs:
                    items:
                      type: string
                    type: array
                required:
                - iamPrincipalARNs
                type: object
              privateNetworkCluster:
                description: Required for APIv2, but for APIv1 set "false" as a default.
                type: boolean
              replicationFactorNumber:
                format: int32
                type: integer
              restProxy:
                items:
                  properties:
                    integrateRestProxyWithSchemaRegistry:
                      type: boolean
                    schemaRegistryPassword:
                      type: string
                    schemaRegistryServerUrl:
                      type: string
                    schemaRegistryUsername:
                      type: string
                    useLocalSchemaRegistry:
                      type: boolean
                    version:
                      type: string
                  required:
                  - integrateRestProxyWithSchemaRegistry
                  - version
                  type: object
                type: array
              schemaRegistry:
                items:
                  properties:
                    version:
                      type: string
                  required:
                  - version
                  type: object
                type: array
              slaTier:
                description: 'Non-production clusters may receive lower priority support
                  and reduced SLAs. Production tier is not available when using Developer
                  class nodes. See SLA Tier for more information. Enum: "PRODUCTION"
                  "NON_PRODUCTION". Required for APIv2, but for APIv1 set "NON_PRODUCTION"
                  as a default.'
                type: string
              twoFactorDelete:
                description: APIv2, unlike AP1, receives an array of TwoFactorDelete
                  (<= 1 items);
                items:
                  properties:
                    email:
                      description: 'Email address which will be contacted when the
                        cluster is requested to be deleted. APIv1: deleteVerifyEmail;
                        APIv2: confirmationEmail.'
                      type: string
                    phone:
                      description: 'APIv1: deleteVerifyPhone; APIv2: confirmationPhoneNumber.'
                      type: string
                  required:
                  - email
                  type: object
                type: array
              version:
                type: string
            required:
            - allowDeleteTopics
            - autoCreateTopics
            - clientToClusterEncryption
            - clusterName
            - dataCentres
            - partitionsNumber
            - replicationFactorNumber
            - version
            type: object
          status:
            description: KafkaStatus defines the observed state of Kafka
            properties:
              currentClusterOperationStatus:
                description: 'CurrentClusterOperationStatus indicates if the cluster
                  is currently performing any restructuring operation such as being
                  created or resized. Enum: "NO_OPERATION" "OPERATION_IN_PROGRESS"
                  "OPERATION_FAILED"'
                type: string
              id:
                type: string
              nodes:
                items:
                  properties:
                    nodeID:
                      type: string
                    nodeSize:
                      type: string
                    nodeStatus:
                      type: string
                    privateAddress:
                      type: string
                    publicAddress:
                      type: string
                    rack:
                      type: string
                  type: object
                type: array
              status:
                description: ClusterStatus shows cluster current state such as a RUNNING,
                  PROVISIONED, FAILED, etc.
                type: string
            required:
            - currentClusterOperationStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
