//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"encoding/json"
	clusterresourcesv1beta1 "github.com/instaclustr/operator/apis/clusterresources/v1beta1"
	"github.com/instaclustr/operator/pkg/apiextensions"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSArchival) DeepCopyInto(out *AWSArchival) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSArchival.
func (in *AWSArchival) DeepCopy() *AWSArchival {
	if in == nil {
		return nil
	}
	out := new(AWSArchival)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSConnectorSettings) DeepCopyInto(out *AWSConnectorSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSConnectorSettings.
func (in *AWSConnectorSettings) DeepCopy() *AWSConnectorSettings {
	if in == nil {
		return nil
	}
	out := new(AWSConnectorSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedVisibility) DeepCopyInto(out *AdvancedVisibility) {
	*out = *in
	if in.TargetKafka != nil {
		in, out := &in.TargetKafka, &out.TargetKafka
		*out = new(TargetKafka)
		**out = **in
	}
	if in.TargetOpenSearch != nil {
		in, out := &in.TargetOpenSearch, &out.TargetOpenSearch
		*out = new(TargetOpenSearch)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedVisibility.
func (in *AdvancedVisibility) DeepCopy() *AdvancedVisibility {
	if in == nil {
		return nil
	}
	out := new(AdvancedVisibility)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConnectorSettings) DeepCopyInto(out *AzureConnectorSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConnectorSettings.
func (in *AzureConnectorSettings) DeepCopy() *AzureConnectorSettings {
	if in == nil {
		return nil
	}
	out := new(AzureConnectorSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BundledCassandraSpec) DeepCopyInto(out *BundledCassandraSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BundledCassandraSpec.
func (in *BundledCassandraSpec) DeepCopy() *BundledCassandraSpec {
	if in == nil {
		return nil
	}
	out := new(BundledCassandraSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BundledKafkaSpec) DeepCopyInto(out *BundledKafkaSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BundledKafkaSpec.
func (in *BundledKafkaSpec) DeepCopy() *BundledKafkaSpec {
	if in == nil {
		return nil
	}
	out := new(BundledKafkaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BundledOpenSearchSpec) DeepCopyInto(out *BundledOpenSearchSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BundledOpenSearchSpec.
func (in *BundledOpenSearchSpec) DeepCopy() *BundledOpenSearchSpec {
	if in == nil {
		return nil
	}
	out := new(BundledOpenSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cadence) DeepCopyInto(out *Cadence) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cadence.
func (in *Cadence) DeepCopy() *Cadence {
	if in == nil {
		return nil
	}
	out := new(Cadence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cadence) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceDataCentre) DeepCopyInto(out *CadenceDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]*PrivateLink, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PrivateLink)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceDataCentre.
func (in *CadenceDataCentre) DeepCopy() *CadenceDataCentre {
	if in == nil {
		return nil
	}
	out := new(CadenceDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceList) DeepCopyInto(out *CadenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cadence, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceList.
func (in *CadenceList) DeepCopy() *CadenceList {
	if in == nil {
		return nil
	}
	out := new(CadenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CadenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceSpec) DeepCopyInto(out *CadenceSpec) {
	*out = *in
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*CadenceDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CadenceDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AWSArchival != nil {
		in, out := &in.AWSArchival, &out.AWSArchival
		*out = make([]*AWSArchival, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AWSArchival)
				**out = **in
			}
		}
	}
	if in.StandardProvisioning != nil {
		in, out := &in.StandardProvisioning, &out.StandardProvisioning
		*out = make([]*StandardProvisioning, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(StandardProvisioning)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SharedProvisioning != nil {
		in, out := &in.SharedProvisioning, &out.SharedProvisioning
		*out = make([]*SharedProvisioning, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SharedProvisioning)
				**out = **in
			}
		}
	}
	if in.PackagedProvisioning != nil {
		in, out := &in.PackagedProvisioning, &out.PackagedProvisioning
		*out = make([]*PackagedProvisioning, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PackagedProvisioning)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TargetPrimaryCadence != nil {
		in, out := &in.TargetPrimaryCadence, &out.TargetPrimaryCadence
		*out = make([]*TargetCadence, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TargetCadence)
				**out = **in
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceSpec.
func (in *CadenceSpec) DeepCopy() *CadenceSpec {
	if in == nil {
		return nil
	}
	out := new(CadenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceStatus) DeepCopyInto(out *CadenceStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
	if in.TargetSecondaryCadence != nil {
		in, out := &in.TargetSecondaryCadence, &out.TargetSecondaryCadence
		*out = make([]*TargetCadence, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TargetCadence)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceStatus.
func (in *CadenceStatus) DeepCopy() *CadenceStatus {
	if in == nil {
		return nil
	}
	out := new(CadenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cassandra) DeepCopyInto(out *Cassandra) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cassandra.
func (in *Cassandra) DeepCopy() *Cassandra {
	if in == nil {
		return nil
	}
	out := new(Cassandra)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cassandra) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDataCentre) DeepCopyInto(out *CassandraDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.Debezium != nil {
		in, out := &in.Debezium, &out.Debezium
		*out = make([]DebeziumCassandraSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShotoverProxy != nil {
		in, out := &in.ShotoverProxy, &out.ShotoverProxy
		*out = make([]ShotoverProxySpec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDataCentre.
func (in *CassandraDataCentre) DeepCopy() *CassandraDataCentre {
	if in == nil {
		return nil
	}
	out := new(CassandraDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraList) DeepCopyInto(out *CassandraList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cassandra, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraList.
func (in *CassandraList) DeepCopy() *CassandraList {
	if in == nil {
		return nil
	}
	out := new(CassandraList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraRestoreFrom) DeepCopyInto(out *CassandraRestoreFrom) {
	*out = *in
	if in.CDCConfigs != nil {
		in, out := &in.CDCConfigs, &out.CDCConfigs
		*out = make([]*RestoreCDCConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RestoreCDCConfig)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraRestoreFrom.
func (in *CassandraRestoreFrom) DeepCopy() *CassandraRestoreFrom {
	if in == nil {
		return nil
	}
	out := new(CassandraRestoreFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraSpec) DeepCopyInto(out *CassandraSpec) {
	*out = *in
	if in.RestoreFrom != nil {
		in, out := &in.RestoreFrom, &out.RestoreFrom
		*out = new(CassandraRestoreFrom)
		(*in).DeepCopyInto(*out)
	}
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*CassandraDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CassandraDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UserRefs != nil {
		in, out := &in.UserRefs, &out.UserRefs
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraSpec.
func (in *CassandraSpec) DeepCopy() *CassandraSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraStatus) DeepCopyInto(out *CassandraStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
	if in.AvailableUsers != nil {
		in, out := &in.AvailableUsers, &out.AvailableUsers
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraStatus.
func (in *CassandraStatus) DeepCopy() *CassandraStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderSettings) DeepCopyInto(out *CloudProviderSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderSettings.
func (in *CloudProviderSettings) DeepCopy() *CloudProviderSettings {
	if in == nil {
		return nil
	}
	out := new(CloudProviderSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	if in.TwoFactorDelete != nil {
		in, out := &in.TwoFactorDelete, &out.TwoFactorDelete
		*out = make([]*TwoFactorDelete, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TwoFactorDelete)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterManagerNodes) DeepCopyInto(out *ClusterManagerNodes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterManagerNodes.
func (in *ClusterManagerNodes) DeepCopy() *ClusterManagerNodes {
	if in == nil {
		return nil
	}
	out := new(ClusterManagerNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*DataCentreStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DataCentreStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(Options)
		**out = **in
	}
	if in.MaintenanceEvents != nil {
		in, out := &in.MaintenanceEvents, &out.MaintenanceEvents
		*out = make([]*clusterresourcesv1beta1.ClusteredMaintenanceEventStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clusterresourcesv1beta1.ClusteredMaintenanceEventStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusteredMaintenanceEvent) DeepCopyInto(out *ClusteredMaintenanceEvent) {
	*out = *in
	if in.InProgress != nil {
		in, out := &in.InProgress, &out.InProgress
		*out = make([]*clusterresourcesv1beta1.MaintenanceEventStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clusterresourcesv1beta1.MaintenanceEventStatus)
				**out = **in
			}
		}
	}
	if in.Past != nil {
		in, out := &in.Past, &out.Past
		*out = make([]*clusterresourcesv1beta1.MaintenanceEventStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clusterresourcesv1beta1.MaintenanceEventStatus)
				**out = **in
			}
		}
	}
	if in.Upcoming != nil {
		in, out := &in.Upcoming, &out.Upcoming
		*out = make([]*clusterresourcesv1beta1.MaintenanceEventStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clusterresourcesv1beta1.MaintenanceEventStatus)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusteredMaintenanceEvent.
func (in *ClusteredMaintenanceEvent) DeepCopy() *ClusteredMaintenanceEvent {
	if in == nil {
		return nil
	}
	out := new(ClusteredMaintenanceEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomConnectors) DeepCopyInto(out *CustomConnectors) {
	*out = *in
	if in.AzureConnectorSettings != nil {
		in, out := &in.AzureConnectorSettings, &out.AzureConnectorSettings
		*out = make([]*AzureConnectorSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AzureConnectorSettings)
				**out = **in
			}
		}
	}
	if in.AWSConnectorSettings != nil {
		in, out := &in.AWSConnectorSettings, &out.AWSConnectorSettings
		*out = make([]*AWSConnectorSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AWSConnectorSettings)
				**out = **in
			}
		}
	}
	if in.GCPConnectorSettings != nil {
		in, out := &in.GCPConnectorSettings, &out.GCPConnectorSettings
		*out = make([]*GCPConnectorSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(GCPConnectorSettings)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomConnectors.
func (in *CustomConnectors) DeepCopy() *CustomConnectors {
	if in == nil {
		return nil
	}
	out := new(CustomConnectors)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentre) DeepCopyInto(out *DataCentre) {
	*out = *in
	if in.CloudProviderSettings != nil {
		in, out := &in.CloudProviderSettings, &out.CloudProviderSettings
		*out = make([]*CloudProviderSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CloudProviderSettings)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentre.
func (in *DataCentre) DeepCopy() *DataCentre {
	if in == nil {
		return nil
	}
	out := new(DataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentreStatus) DeepCopyInto(out *DataCentreStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]*Node, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Node)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make(PrivateLinkStatuses, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(privateLinkStatus)
				**out = **in
			}
		}
	}
	if in.ResizeOperations != nil {
		in, out := &in.ResizeOperations, &out.ResizeOperations
		*out = make([]*ResizeOperation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeOperation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentreStatus.
func (in *DataCentreStatus) DeepCopy() *DataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(DataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebeziumCassandraSpec) DeepCopyInto(out *DebeziumCassandraSpec) {
	*out = *in
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(clusterresourcesv1beta1.ClusterRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebeziumCassandraSpec.
func (in *DebeziumCassandraSpec) DeepCopy() *DebeziumCassandraSpec {
	if in == nil {
		return nil
	}
	out := new(DebeziumCassandraSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedZookeeper) DeepCopyInto(out *DedicatedZookeeper) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedZookeeper.
func (in *DedicatedZookeeper) DeepCopy() *DedicatedZookeeper {
	if in == nil {
		return nil
	}
	out := new(DedicatedZookeeper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalCluster) DeepCopyInto(out *ExternalCluster) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalCluster.
func (in *ExternalCluster) DeepCopy() *ExternalCluster {
	if in == nil {
		return nil
	}
	out := new(ExternalCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPConnectorSettings) DeepCopyInto(out *GCPConnectorSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPConnectorSettings.
func (in *GCPConnectorSettings) DeepCopy() *GCPConnectorSettings {
	if in == nil {
		return nil
	}
	out := new(GCPConnectorSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericClusterSpec) DeepCopyInto(out *GenericClusterSpec) {
	*out = *in
	if in.TwoFactorDelete != nil {
		in, out := &in.TwoFactorDelete, &out.TwoFactorDelete
		*out = make([]*TwoFactorDelete, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TwoFactorDelete)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericClusterSpec.
func (in *GenericClusterSpec) DeepCopy() *GenericClusterSpec {
	if in == nil {
		return nil
	}
	out := new(GenericClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericDataCentreSpec) DeepCopyInto(out *GenericDataCentreSpec) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CloudProviderSettings != nil {
		in, out := &in.CloudProviderSettings, &out.CloudProviderSettings
		*out = make([]*CloudProviderSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CloudProviderSettings)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericDataCentreSpec.
func (in *GenericDataCentreSpec) DeepCopy() *GenericDataCentreSpec {
	if in == nil {
		return nil
	}
	out := new(GenericDataCentreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericDataCentreStatus) DeepCopyInto(out *GenericDataCentreStatus) {
	*out = *in
	if in.ResizeOperations != nil {
		in, out := &in.ResizeOperations, &out.ResizeOperations
		*out = make([]*ResizeOperation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeOperation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericDataCentreStatus.
func (in *GenericDataCentreStatus) DeepCopy() *GenericDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(GenericDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericStatus) DeepCopyInto(out *GenericStatus) {
	*out = *in
	if in.MaintenanceEvents != nil {
		in, out := &in.MaintenanceEvents, &out.MaintenanceEvents
		*out = make([]*clusterresourcesv1beta1.ClusteredMaintenanceEventStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clusterresourcesv1beta1.ClusteredMaintenanceEventStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericStatus.
func (in *GenericStatus) DeepCopy() *GenericStatus {
	if in == nil {
		return nil
	}
	out := new(GenericStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterDataCentreReplication) DeepCopyInto(out *InterDataCentreReplication) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterDataCentreReplication.
func (in *InterDataCentreReplication) DeepCopy() *InterDataCentreReplication {
	if in == nil {
		return nil
	}
	out := new(InterDataCentreReplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntraDataCentreReplication) DeepCopyInto(out *IntraDataCentreReplication) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntraDataCentreReplication.
func (in *IntraDataCentreReplication) DeepCopy() *IntraDataCentreReplication {
	if in == nil {
		return nil
	}
	out := new(IntraDataCentreReplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kafka) DeepCopyInto(out *Kafka) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kafka.
func (in *Kafka) DeepCopy() *Kafka {
	if in == nil {
		return nil
	}
	out := new(Kafka)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kafka) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnect) DeepCopyInto(out *KafkaConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnect.
func (in *KafkaConnect) DeepCopy() *KafkaConnect {
	if in == nil {
		return nil
	}
	out := new(KafkaConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectDataCentre) DeepCopyInto(out *KafkaConnectDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectDataCentre.
func (in *KafkaConnectDataCentre) DeepCopy() *KafkaConnectDataCentre {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectList) DeepCopyInto(out *KafkaConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectList.
func (in *KafkaConnectList) DeepCopy() *KafkaConnectList {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectSpec) DeepCopyInto(out *KafkaConnectSpec) {
	*out = *in
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*KafkaConnectDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KafkaConnectDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TargetCluster != nil {
		in, out := &in.TargetCluster, &out.TargetCluster
		*out = make([]*TargetCluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TargetCluster)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CustomConnectors != nil {
		in, out := &in.CustomConnectors, &out.CustomConnectors
		*out = make([]*CustomConnectors, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CustomConnectors)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectSpec.
func (in *KafkaConnectSpec) DeepCopy() *KafkaConnectSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectStatus) DeepCopyInto(out *KafkaConnectStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectStatus.
func (in *KafkaConnectStatus) DeepCopy() *KafkaConnectStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaDataCentre) DeepCopyInto(out *KafkaDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]*PrivateLink, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PrivateLink)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaDataCentre.
func (in *KafkaDataCentre) DeepCopy() *KafkaDataCentre {
	if in == nil {
		return nil
	}
	out := new(KafkaDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaList) DeepCopyInto(out *KafkaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Kafka, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaList.
func (in *KafkaList) DeepCopy() *KafkaList {
	if in == nil {
		return nil
	}
	out := new(KafkaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSpec) DeepCopyInto(out *KafkaSpec) {
	*out = *in
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.SchemaRegistry != nil {
		in, out := &in.SchemaRegistry, &out.SchemaRegistry
		*out = make([]*SchemaRegistry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SchemaRegistry)
				**out = **in
			}
		}
	}
	if in.RestProxy != nil {
		in, out := &in.RestProxy, &out.RestProxy
		*out = make([]*RestProxy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RestProxy)
				**out = **in
			}
		}
	}
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*KafkaDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KafkaDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
	if in.DedicatedZookeeper != nil {
		in, out := &in.DedicatedZookeeper, &out.DedicatedZookeeper
		*out = make([]*DedicatedZookeeper, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DedicatedZookeeper)
				**out = **in
			}
		}
	}
	if in.KarapaceRestProxy != nil {
		in, out := &in.KarapaceRestProxy, &out.KarapaceRestProxy
		*out = make([]*KarapaceRestProxy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KarapaceRestProxy)
				**out = **in
			}
		}
	}
	if in.KarapaceSchemaRegistry != nil {
		in, out := &in.KarapaceSchemaRegistry, &out.KarapaceSchemaRegistry
		*out = make([]*KarapaceSchemaRegistry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KarapaceSchemaRegistry)
				**out = **in
			}
		}
	}
	if in.UserRefs != nil {
		in, out := &in.UserRefs, &out.UserRefs
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
	if in.Kraft != nil {
		in, out := &in.Kraft, &out.Kraft
		*out = make([]*Kraft, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Kraft)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSpec.
func (in *KafkaSpec) DeepCopy() *KafkaSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaStatus) DeepCopyInto(out *KafkaStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
	if in.AvailableUsers != nil {
		in, out := &in.AvailableUsers, &out.AvailableUsers
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaStatus.
func (in *KafkaStatus) DeepCopy() *KafkaStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KarapaceRestProxy) DeepCopyInto(out *KarapaceRestProxy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KarapaceRestProxy.
func (in *KarapaceRestProxy) DeepCopy() *KarapaceRestProxy {
	if in == nil {
		return nil
	}
	out := new(KarapaceRestProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KarapaceSchemaRegistry) DeepCopyInto(out *KarapaceSchemaRegistry) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KarapaceSchemaRegistry.
func (in *KarapaceSchemaRegistry) DeepCopy() *KarapaceSchemaRegistry {
	if in == nil {
		return nil
	}
	out := new(KarapaceSchemaRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kraft) DeepCopyInto(out *Kraft) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kraft.
func (in *Kraft) DeepCopy() *Kraft {
	if in == nil {
		return nil
	}
	out := new(Kraft)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster) DeepCopyInto(out *ManagedCluster) {
	*out = *in
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(clusterresourcesv1beta1.ClusterRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster.
func (in *ManagedCluster) DeepCopy() *ManagedCluster {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Node) DeepCopyInto(out *Node) {
	*out = *in
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Node.
func (in *Node) DeepCopy() *Node {
	if in == nil {
		return nil
	}
	out := new(Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremisesSpec) DeepCopyInto(out *OnPremisesSpec) {
	*out = *in
	if in.CloudInitScriptRef != nil {
		in, out := &in.CloudInitScriptRef, &out.CloudInitScriptRef
		*out = new(apiextensions.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremisesSpec.
func (in *OnPremisesSpec) DeepCopy() *OnPremisesSpec {
	if in == nil {
		return nil
	}
	out := new(OnPremisesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearch) DeepCopyInto(out *OpenSearch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearch.
func (in *OpenSearch) DeepCopy() *OpenSearch {
	if in == nil {
		return nil
	}
	out := new(OpenSearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenSearch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDashboards) DeepCopyInto(out *OpenSearchDashboards) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDashboards.
func (in *OpenSearchDashboards) DeepCopy() *OpenSearchDashboards {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDashboards)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDataCentre) DeepCopyInto(out *OpenSearchDataCentre) {
	*out = *in
	in.GenericDataCentreSpec.DeepCopyInto(&out.GenericDataCentreSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDataCentre.
func (in *OpenSearchDataCentre) DeepCopy() *OpenSearchDataCentre {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDataCentreStatus) DeepCopyInto(out *OpenSearchDataCentreStatus) {
	*out = *in
	in.GenericDataCentreStatus.DeepCopyInto(&out.GenericDataCentreStatus)
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]OpenSearchNodeStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDataCentreStatus.
func (in *OpenSearchDataCentreStatus) DeepCopy() *OpenSearchDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDataNodes) DeepCopyInto(out *OpenSearchDataNodes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDataNodes.
func (in *OpenSearchDataNodes) DeepCopy() *OpenSearchDataNodes {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDataNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchIngestNodes) DeepCopyInto(out *OpenSearchIngestNodes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchIngestNodes.
func (in *OpenSearchIngestNodes) DeepCopy() *OpenSearchIngestNodes {
	if in == nil {
		return nil
	}
	out := new(OpenSearchIngestNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchList) DeepCopyInto(out *OpenSearchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenSearch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchList.
func (in *OpenSearchList) DeepCopy() *OpenSearchList {
	if in == nil {
		return nil
	}
	out := new(OpenSearchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenSearchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchNodeStatus) DeepCopyInto(out *OpenSearchNodeStatus) {
	*out = *in
	in.Node.DeepCopyInto(&out.Node)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchNodeStatus.
func (in *OpenSearchNodeStatus) DeepCopy() *OpenSearchNodeStatus {
	if in == nil {
		return nil
	}
	out := new(OpenSearchNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchRestoreFrom) DeepCopyInto(out *OpenSearchRestoreFrom) {
	*out = *in
	if in.CDCConfigs != nil {
		in, out := &in.CDCConfigs, &out.CDCConfigs
		*out = make([]*RestoreCDCConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RestoreCDCConfig)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchRestoreFrom.
func (in *OpenSearchRestoreFrom) DeepCopy() *OpenSearchRestoreFrom {
	if in == nil {
		return nil
	}
	out := new(OpenSearchRestoreFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchSpec) DeepCopyInto(out *OpenSearchSpec) {
	*out = *in
	in.GenericClusterSpec.DeepCopyInto(&out.GenericClusterSpec)
	if in.RestoreFrom != nil {
		in, out := &in.RestoreFrom, &out.RestoreFrom
		*out = new(OpenSearchRestoreFrom)
		(*in).DeepCopyInto(*out)
	}
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*OpenSearchDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(OpenSearchDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DataNodes != nil {
		in, out := &in.DataNodes, &out.DataNodes
		*out = make([]*OpenSearchDataNodes, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(OpenSearchDataNodes)
				**out = **in
			}
		}
	}
	if in.Dashboards != nil {
		in, out := &in.Dashboards, &out.Dashboards
		*out = make([]*OpenSearchDashboards, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(OpenSearchDashboards)
				**out = **in
			}
		}
	}
	if in.ClusterManagerNodes != nil {
		in, out := &in.ClusterManagerNodes, &out.ClusterManagerNodes
		*out = make([]*ClusterManagerNodes, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClusterManagerNodes)
				**out = **in
			}
		}
	}
	if in.UserRefs != nil {
		in, out := &in.UserRefs, &out.UserRefs
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
	if in.IngestNodes != nil {
		in, out := &in.IngestNodes, &out.IngestNodes
		*out = make([]*OpenSearchIngestNodes, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(OpenSearchIngestNodes)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchSpec.
func (in *OpenSearchSpec) DeepCopy() *OpenSearchSpec {
	if in == nil {
		return nil
	}
	out := new(OpenSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchStatus) DeepCopyInto(out *OpenSearchStatus) {
	*out = *in
	in.GenericStatus.DeepCopyInto(&out.GenericStatus)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]OpenSearchDataCentreStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailableUsers != nil {
		in, out := &in.AvailableUsers, &out.AvailableUsers
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchStatus.
func (in *OpenSearchStatus) DeepCopy() *OpenSearchStatus {
	if in == nil {
		return nil
	}
	out := new(OpenSearchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Options) DeepCopyInto(out *Options) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Options.
func (in *Options) DeepCopy() *Options {
	if in == nil {
		return nil
	}
	out := new(Options)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackagedProvisioning) DeepCopyInto(out *PackagedProvisioning) {
	*out = *in
	if in.BundledKafkaSpec != nil {
		in, out := &in.BundledKafkaSpec, &out.BundledKafkaSpec
		*out = new(BundledKafkaSpec)
		**out = **in
	}
	if in.BundledOpenSearchSpec != nil {
		in, out := &in.BundledOpenSearchSpec, &out.BundledOpenSearchSpec
		*out = new(BundledOpenSearchSpec)
		**out = **in
	}
	if in.BundledCassandraSpec != nil {
		in, out := &in.BundledCassandraSpec, &out.BundledCassandraSpec
		*out = new(BundledCassandraSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackagedProvisioning.
func (in *PackagedProvisioning) DeepCopy() *PackagedProvisioning {
	if in == nil {
		return nil
	}
	out := new(PackagedProvisioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchRequest) DeepCopyInto(out *PatchRequest) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchRequest.
func (in *PatchRequest) DeepCopy() *PatchRequest {
	if in == nil {
		return nil
	}
	out := new(PatchRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgBouncer) DeepCopyInto(out *PgBouncer) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgBouncer.
func (in *PgBouncer) DeepCopy() *PgBouncer {
	if in == nil {
		return nil
	}
	out := new(PgBouncer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgDataCentre) DeepCopyInto(out *PgDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.InterDataCentreReplication != nil {
		in, out := &in.InterDataCentreReplication, &out.InterDataCentreReplication
		*out = make([]*InterDataCentreReplication, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(InterDataCentreReplication)
				**out = **in
			}
		}
	}
	if in.IntraDataCentreReplication != nil {
		in, out := &in.IntraDataCentreReplication, &out.IntraDataCentreReplication
		*out = make([]*IntraDataCentreReplication, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(IntraDataCentreReplication)
				**out = **in
			}
		}
	}
	if in.PGBouncer != nil {
		in, out := &in.PGBouncer, &out.PGBouncer
		*out = make([]*PgBouncer, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PgBouncer)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgDataCentre.
func (in *PgDataCentre) DeepCopy() *PgDataCentre {
	if in == nil {
		return nil
	}
	out := new(PgDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgExtension) DeepCopyInto(out *PgExtension) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgExtension.
func (in *PgExtension) DeepCopy() *PgExtension {
	if in == nil {
		return nil
	}
	out := new(PgExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PgExtensions) DeepCopyInto(out *PgExtensions) {
	{
		in := &in
		*out = make(PgExtensions, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgExtensions.
func (in PgExtensions) DeepCopy() PgExtensions {
	if in == nil {
		return nil
	}
	out := new(PgExtensions)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgRestoreFrom) DeepCopyInto(out *PgRestoreFrom) {
	*out = *in
	if in.CDCConfigs != nil {
		in, out := &in.CDCConfigs, &out.CDCConfigs
		*out = make([]*RestoreCDCConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RestoreCDCConfig)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgRestoreFrom.
func (in *PgRestoreFrom) DeepCopy() *PgRestoreFrom {
	if in == nil {
		return nil
	}
	out := new(PgRestoreFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgSpec) DeepCopyInto(out *PgSpec) {
	*out = *in
	if in.PgRestoreFrom != nil {
		in, out := &in.PgRestoreFrom, &out.PgRestoreFrom
		*out = new(PgRestoreFrom)
		(*in).DeepCopyInto(*out)
	}
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*PgDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PgDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClusterConfigurations != nil {
		in, out := &in.ClusterConfigurations, &out.ClusterConfigurations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserRefs != nil {
		in, out := &in.UserRefs, &out.UserRefs
		*out = make([]*apiextensions.ObjectReference, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make(PgExtensions, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgSpec.
func (in *PgSpec) DeepCopy() *PgSpec {
	if in == nil {
		return nil
	}
	out := new(PgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgStatus) DeepCopyInto(out *PgStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgStatus.
func (in *PgStatus) DeepCopy() *PgStatus {
	if in == nil {
		return nil
	}
	out := new(PgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQL) DeepCopyInto(out *PostgreSQL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQL.
func (in *PostgreSQL) DeepCopy() *PostgreSQL {
	if in == nil {
		return nil
	}
	out := new(PostgreSQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgreSQL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLList) DeepCopyInto(out *PostgreSQLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgreSQL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLList.
func (in *PostgreSQLList) DeepCopy() *PostgreSQLList {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgreSQLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLink) DeepCopyInto(out *PrivateLink) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLink.
func (in *PrivateLink) DeepCopy() *PrivateLink {
	if in == nil {
		return nil
	}
	out := new(PrivateLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PrivateLinkStatuses) DeepCopyInto(out *PrivateLinkStatuses) {
	{
		in := &in
		*out = make(PrivateLinkStatuses, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(privateLinkStatus)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkStatuses.
func (in PrivateLinkStatuses) DeepCopy() PrivateLinkStatuses {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkStatuses)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkV1) DeepCopyInto(out *PrivateLinkV1) {
	*out = *in
	if in.IAMPrincipalARNs != nil {
		in, out := &in.IAMPrincipalARNs, &out.IAMPrincipalARNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkV1.
func (in *PrivateLinkV1) DeepCopy() *PrivateLinkV1 {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkV1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redis) DeepCopyInto(out *Redis) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redis.
func (in *Redis) DeepCopy() *Redis {
	if in == nil {
		return nil
	}
	out := new(Redis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Redis) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisDataCentre) DeepCopyInto(out *RedisDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]*PrivateLink, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PrivateLink)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisDataCentre.
func (in *RedisDataCentre) DeepCopy() *RedisDataCentre {
	if in == nil {
		return nil
	}
	out := new(RedisDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisList) DeepCopyInto(out *RedisList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Redis, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisList.
func (in *RedisList) DeepCopy() *RedisList {
	if in == nil {
		return nil
	}
	out := new(RedisList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedisList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisRestoreFrom) DeepCopyInto(out *RedisRestoreFrom) {
	*out = *in
	if in.CDCConfigs != nil {
		in, out := &in.CDCConfigs, &out.CDCConfigs
		*out = make([]*RestoreCDCConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RestoreCDCConfig)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisRestoreFrom.
func (in *RedisRestoreFrom) DeepCopy() *RedisRestoreFrom {
	if in == nil {
		return nil
	}
	out := new(RedisRestoreFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisSpec) DeepCopyInto(out *RedisSpec) {
	*out = *in
	if in.RestoreFrom != nil {
		in, out := &in.RestoreFrom, &out.RestoreFrom
		*out = new(RedisRestoreFrom)
		(*in).DeepCopyInto(*out)
	}
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*RedisDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RedisDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UserRefs != nil {
		in, out := &in.UserRefs, &out.UserRefs
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
	if in.ResizeSettings != nil {
		in, out := &in.ResizeSettings, &out.ResizeSettings
		*out = make([]*ResizeSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResizeSettings)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisSpec.
func (in *RedisSpec) DeepCopy() *RedisSpec {
	if in == nil {
		return nil
	}
	out := new(RedisSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisStatus) DeepCopyInto(out *RedisStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
	if in.AvailableUsers != nil {
		in, out := &in.AvailableUsers, &out.AvailableUsers
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisStatus.
func (in *RedisStatus) DeepCopy() *RedisStatus {
	if in == nil {
		return nil
	}
	out := new(RedisStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in References) DeepCopyInto(out *References) {
	{
		in := &in
		*out = make(References, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(apiextensions.ObjectReference)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new References.
func (in References) DeepCopy() References {
	if in == nil {
		return nil
	}
	out := new(References)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplaceOperation) DeepCopyInto(out *ReplaceOperation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplaceOperation.
func (in *ReplaceOperation) DeepCopy() *ReplaceOperation {
	if in == nil {
		return nil
	}
	out := new(ReplaceOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResizeOperation) DeepCopyInto(out *ResizeOperation) {
	*out = *in
	if in.ReplaceOperations != nil {
		in, out := &in.ReplaceOperations, &out.ReplaceOperations
		*out = make([]*ReplaceOperation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ReplaceOperation)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResizeOperation.
func (in *ResizeOperation) DeepCopy() *ResizeOperation {
	if in == nil {
		return nil
	}
	out := new(ResizeOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResizeSettings) DeepCopyInto(out *ResizeSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResizeSettings.
func (in *ResizeSettings) DeepCopy() *ResizeSettings {
	if in == nil {
		return nil
	}
	out := new(ResizeSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestProxy) DeepCopyInto(out *RestProxy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestProxy.
func (in *RestProxy) DeepCopy() *RestProxy {
	if in == nil {
		return nil
	}
	out := new(RestProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreCDCConfig) DeepCopyInto(out *RestoreCDCConfig) {
	*out = *in
	if in.CustomVPCSettings != nil {
		in, out := &in.CustomVPCSettings, &out.CustomVPCSettings
		*out = new(RestoreCustomVPCSettings)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreCDCConfig.
func (in *RestoreCDCConfig) DeepCopy() *RestoreCDCConfig {
	if in == nil {
		return nil
	}
	out := new(RestoreCDCConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreCustomVPCSettings) DeepCopyInto(out *RestoreCustomVPCSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreCustomVPCSettings.
func (in *RestoreCustomVPCSettings) DeepCopy() *RestoreCustomVPCSettings {
	if in == nil {
		return nil
	}
	out := new(RestoreCustomVPCSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaRegistry) DeepCopyInto(out *SchemaRegistry) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaRegistry.
func (in *SchemaRegistry) DeepCopy() *SchemaRegistry {
	if in == nil {
		return nil
	}
	out := new(SchemaRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedProvisioning) DeepCopyInto(out *SharedProvisioning) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedProvisioning.
func (in *SharedProvisioning) DeepCopy() *SharedProvisioning {
	if in == nil {
		return nil
	}
	out := new(SharedProvisioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShotoverProxySpec) DeepCopyInto(out *ShotoverProxySpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShotoverProxySpec.
func (in *ShotoverProxySpec) DeepCopy() *ShotoverProxySpec {
	if in == nil {
		return nil
	}
	out := new(ShotoverProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardProvisioning) DeepCopyInto(out *StandardProvisioning) {
	*out = *in
	if in.AdvancedVisibility != nil {
		in, out := &in.AdvancedVisibility, &out.AdvancedVisibility
		*out = make([]*AdvancedVisibility, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AdvancedVisibility)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TargetCassandra != nil {
		in, out := &in.TargetCassandra, &out.TargetCassandra
		*out = new(TargetCassandra)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardProvisioning.
func (in *StandardProvisioning) DeepCopy() *StandardProvisioning {
	if in == nil {
		return nil
	}
	out := new(StandardProvisioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetCadence) DeepCopyInto(out *TargetCadence) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetCadence.
func (in *TargetCadence) DeepCopy() *TargetCadence {
	if in == nil {
		return nil
	}
	out := new(TargetCadence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetCassandra) DeepCopyInto(out *TargetCassandra) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetCassandra.
func (in *TargetCassandra) DeepCopy() *TargetCassandra {
	if in == nil {
		return nil
	}
	out := new(TargetCassandra)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetCluster) DeepCopyInto(out *TargetCluster) {
	*out = *in
	if in.ExternalCluster != nil {
		in, out := &in.ExternalCluster, &out.ExternalCluster
		*out = make([]*ExternalCluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ExternalCluster)
				**out = **in
			}
		}
	}
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = make([]*ManagedCluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ManagedCluster)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetCluster.
func (in *TargetCluster) DeepCopy() *TargetCluster {
	if in == nil {
		return nil
	}
	out := new(TargetCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetKafka) DeepCopyInto(out *TargetKafka) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetKafka.
func (in *TargetKafka) DeepCopy() *TargetKafka {
	if in == nil {
		return nil
	}
	out := new(TargetKafka)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetOpenSearch) DeepCopyInto(out *TargetOpenSearch) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetOpenSearch.
func (in *TargetOpenSearch) DeepCopy() *TargetOpenSearch {
	if in == nil {
		return nil
	}
	out := new(TargetOpenSearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwoFactorDelete) DeepCopyInto(out *TwoFactorDelete) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwoFactorDelete.
func (in *TwoFactorDelete) DeepCopy() *TwoFactorDelete {
	if in == nil {
		return nil
	}
	out := new(TwoFactorDelete)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zookeeper) DeepCopyInto(out *Zookeeper) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zookeeper.
func (in *Zookeeper) DeepCopy() *Zookeeper {
	if in == nil {
		return nil
	}
	out := new(Zookeeper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Zookeeper) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperDataCentre) DeepCopyInto(out *ZookeeperDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.EnforceAuthSchemes != nil {
		in, out := &in.EnforceAuthSchemes, &out.EnforceAuthSchemes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperDataCentre.
func (in *ZookeeperDataCentre) DeepCopy() *ZookeeperDataCentre {
	if in == nil {
		return nil
	}
	out := new(ZookeeperDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperList) DeepCopyInto(out *ZookeeperList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Zookeeper, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperList.
func (in *ZookeeperList) DeepCopy() *ZookeeperList {
	if in == nil {
		return nil
	}
	out := new(ZookeeperList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZookeeperList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperSpec) DeepCopyInto(out *ZookeeperSpec) {
	*out = *in
	in.Cluster.DeepCopyInto(&out.Cluster)
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*ZookeeperDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ZookeeperDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperSpec.
func (in *ZookeeperSpec) DeepCopy() *ZookeeperSpec {
	if in == nil {
		return nil
	}
	out := new(ZookeeperSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperStatus) DeepCopyInto(out *ZookeeperStatus) {
	*out = *in
	in.ClusterStatus.DeepCopyInto(&out.ClusterStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperStatus.
func (in *ZookeeperStatus) DeepCopy() *ZookeeperStatus {
	if in == nil {
		return nil
	}
	out := new(ZookeeperStatus)
	in.DeepCopyInto(out)
	return out
}
