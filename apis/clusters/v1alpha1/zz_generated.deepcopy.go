//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bundle) DeepCopyInto(out *Bundle) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bundle.
func (in *Bundle) DeepCopy() *Bundle {
	if in == nil {
		return nil
	}
	out := new(Bundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cadence) DeepCopyInto(out *Cadence) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cadence.
func (in *Cadence) DeepCopy() *Cadence {
	if in == nil {
		return nil
	}
	out := new(Cadence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cadence) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceBundle) DeepCopyInto(out *CadenceBundle) {
	*out = *in
	out.Bundle = in.Bundle
	out.Options = in.Options
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceBundle.
func (in *CadenceBundle) DeepCopy() *CadenceBundle {
	if in == nil {
		return nil
	}
	out := new(CadenceBundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceBundleOptions) DeepCopyInto(out *CadenceBundleOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceBundleOptions.
func (in *CadenceBundleOptions) DeepCopy() *CadenceBundleOptions {
	if in == nil {
		return nil
	}
	out := new(CadenceBundleOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceDataCentre) DeepCopyInto(out *CadenceDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]*CadenceBundle, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CadenceBundle)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceDataCentre.
func (in *CadenceDataCentre) DeepCopy() *CadenceDataCentre {
	if in == nil {
		return nil
	}
	out := new(CadenceDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceDataCentreStatus) DeepCopyInto(out *CadenceDataCentreStatus) {
	*out = *in
	out.DataCentreStatus = in.DataCentreStatus
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]*Node, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Node)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceDataCentreStatus.
func (in *CadenceDataCentreStatus) DeepCopy() *CadenceDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(CadenceDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceList) DeepCopyInto(out *CadenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cadence, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceList.
func (in *CadenceList) DeepCopy() *CadenceList {
	if in == nil {
		return nil
	}
	out := new(CadenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CadenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceSpec) DeepCopyInto(out *CadenceSpec) {
	*out = *in
	in.ClusterSpec.DeepCopyInto(&out.ClusterSpec)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]*CadenceBundle, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CadenceBundle)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceSpec.
func (in *CadenceSpec) DeepCopy() *CadenceSpec {
	if in == nil {
		return nil
	}
	out := new(CadenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CadenceStatus) DeepCopyInto(out *CadenceStatus) {
	*out = *in
	out.ClusterStatus = in.ClusterStatus
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*DataCentreStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DataCentreStatus)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CadenceStatus.
func (in *CadenceStatus) DeepCopy() *CadenceStatus {
	if in == nil {
		return nil
	}
	out := new(CadenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProvider) DeepCopyInto(out *ClusterProvider) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProvider.
func (in *ClusterProvider) DeepCopy() *ClusterProvider {
	if in == nil {
		return nil
	}
	out := new(ClusterProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.Provider.DeepCopyInto(&out.Provider)
	if in.RackAllocation != nil {
		in, out := &in.RackAllocation, &out.RackAllocation
		*out = new(RackAllocation)
		**out = **in
	}
	if in.FirewallRules != nil {
		in, out := &in.FirewallRules, &out.FirewallRules
		*out = make([]*FirewallRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(FirewallRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TwoFactorDelete != nil {
		in, out := &in.TwoFactorDelete, &out.TwoFactorDelete
		*out = new(TwoFactorDelete)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentre) DeepCopyInto(out *DataCentre) {
	*out = *in
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(ClusterProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.RackAllocation != nil {
		in, out := &in.RackAllocation, &out.RackAllocation
		*out = new(RackAllocation)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentre.
func (in *DataCentre) DeepCopy() *DataCentre {
	if in == nil {
		return nil
	}
	out := new(DataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentreStatus) DeepCopyInto(out *DataCentreStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentreStatus.
func (in *DataCentreStatus) DeepCopy() *DataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(DataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRule) DeepCopyInto(out *FirewallRule) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RuleType, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRule.
func (in *FirewallRule) DeepCopy() *FirewallRule {
	if in == nil {
		return nil
	}
	out := new(FirewallRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Node) DeepCopyInto(out *Node) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Node.
func (in *Node) DeepCopy() *Node {
	if in == nil {
		return nil
	}
	out := new(Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearch) DeepCopyInto(out *OpenSearch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearch.
func (in *OpenSearch) DeepCopy() *OpenSearch {
	if in == nil {
		return nil
	}
	out := new(OpenSearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenSearch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchBundle) DeepCopyInto(out *OpenSearchBundle) {
	*out = *in
	out.Bundle = in.Bundle
	out.Options = in.Options
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchBundle.
func (in *OpenSearchBundle) DeepCopy() *OpenSearchBundle {
	if in == nil {
		return nil
	}
	out := new(OpenSearchBundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchBundleOptions) DeepCopyInto(out *OpenSearchBundleOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchBundleOptions.
func (in *OpenSearchBundleOptions) DeepCopy() *OpenSearchBundleOptions {
	if in == nil {
		return nil
	}
	out := new(OpenSearchBundleOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDataCentre) DeepCopyInto(out *OpenSearchDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]OpenSearchBundle, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDataCentre.
func (in *OpenSearchDataCentre) DeepCopy() *OpenSearchDataCentre {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchDataCentreStatus) DeepCopyInto(out *OpenSearchDataCentreStatus) {
	*out = *in
	out.DataCentreStatus = in.DataCentreStatus
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]Node, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchDataCentreStatus.
func (in *OpenSearchDataCentreStatus) DeepCopy() *OpenSearchDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(OpenSearchDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchList) DeepCopyInto(out *OpenSearchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenSearch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchList.
func (in *OpenSearchList) DeepCopy() *OpenSearchList {
	if in == nil {
		return nil
	}
	out := new(OpenSearchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenSearchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchSpec) DeepCopyInto(out *OpenSearchSpec) {
	*out = *in
	in.ClusterSpec.DeepCopyInto(&out.ClusterSpec)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]OpenSearchBundle, len(*in))
		copy(*out, *in)
	}
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]OpenSearchDataCentre, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchSpec.
func (in *OpenSearchSpec) DeepCopy() *OpenSearchSpec {
	if in == nil {
		return nil
	}
	out := new(OpenSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchStatus) DeepCopyInto(out *OpenSearchStatus) {
	*out = *in
	out.ClusterStatus = in.ClusterStatus
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]DataCentreStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchStatus.
func (in *OpenSearchStatus) DeepCopy() *OpenSearchStatus {
	if in == nil {
		return nil
	}
	out := new(OpenSearchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQL) DeepCopyInto(out *PostgreSQL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQL.
func (in *PostgreSQL) DeepCopy() *PostgreSQL {
	if in == nil {
		return nil
	}
	out := new(PostgreSQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgreSQL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLBundle) DeepCopyInto(out *PostgreSQLBundle) {
	*out = *in
	out.Bundle = in.Bundle
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(PostgreSQLBundleOptions)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLBundle.
func (in *PostgreSQLBundle) DeepCopy() *PostgreSQLBundle {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLBundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLBundleOptions) DeepCopyInto(out *PostgreSQLBundleOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLBundleOptions.
func (in *PostgreSQLBundleOptions) DeepCopy() *PostgreSQLBundleOptions {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLBundleOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLDataCentre) DeepCopyInto(out *PostgreSQLDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]*PostgreSQLBundle, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgreSQLBundle)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLDataCentre.
func (in *PostgreSQLDataCentre) DeepCopy() *PostgreSQLDataCentre {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLDataCentreStatus) DeepCopyInto(out *PostgreSQLDataCentreStatus) {
	*out = *in
	out.DataCentreStatus = in.DataCentreStatus
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]*Node, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Node)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLDataCentreStatus.
func (in *PostgreSQLDataCentreStatus) DeepCopy() *PostgreSQLDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLList) DeepCopyInto(out *PostgreSQLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgreSQL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLList.
func (in *PostgreSQLList) DeepCopy() *PostgreSQLList {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgreSQLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLSpec) DeepCopyInto(out *PostgreSQLSpec) {
	*out = *in
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]*PostgreSQLBundle, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgreSQLBundle)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*PostgreSQLDataCentre, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgreSQLDataCentre)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLSpec.
func (in *PostgreSQLSpec) DeepCopy() *PostgreSQLSpec {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLStatus) DeepCopyInto(out *PostgreSQLStatus) {
	*out = *in
	out.ClusterStatus = in.ClusterStatus
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]*PostgreSQLDataCentreStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgreSQLDataCentreStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLStatus.
func (in *PostgreSQLStatus) DeepCopy() *PostgreSQLStatus {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackAllocation) DeepCopyInto(out *RackAllocation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackAllocation.
func (in *RackAllocation) DeepCopy() *RackAllocation {
	if in == nil {
		return nil
	}
	out := new(RackAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redis) DeepCopyInto(out *Redis) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redis.
func (in *Redis) DeepCopy() *Redis {
	if in == nil {
		return nil
	}
	out := new(Redis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Redis) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisBundle) DeepCopyInto(out *RedisBundle) {
	*out = *in
	out.Bundle = in.Bundle
	out.Options = in.Options
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisBundle.
func (in *RedisBundle) DeepCopy() *RedisBundle {
	if in == nil {
		return nil
	}
	out := new(RedisBundle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisBundleOptions) DeepCopyInto(out *RedisBundleOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisBundleOptions.
func (in *RedisBundleOptions) DeepCopy() *RedisBundleOptions {
	if in == nil {
		return nil
	}
	out := new(RedisBundleOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisDataCentre) DeepCopyInto(out *RedisDataCentre) {
	*out = *in
	in.DataCentre.DeepCopyInto(&out.DataCentre)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]RedisBundle, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisDataCentre.
func (in *RedisDataCentre) DeepCopy() *RedisDataCentre {
	if in == nil {
		return nil
	}
	out := new(RedisDataCentre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisDataCentreStatus) DeepCopyInto(out *RedisDataCentreStatus) {
	*out = *in
	out.DataCentreStatus = in.DataCentreStatus
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]Node, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisDataCentreStatus.
func (in *RedisDataCentreStatus) DeepCopy() *RedisDataCentreStatus {
	if in == nil {
		return nil
	}
	out := new(RedisDataCentreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisList) DeepCopyInto(out *RedisList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Redis, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisList.
func (in *RedisList) DeepCopy() *RedisList {
	if in == nil {
		return nil
	}
	out := new(RedisList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedisList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisSpec) DeepCopyInto(out *RedisSpec) {
	*out = *in
	in.ClusterSpec.DeepCopyInto(&out.ClusterSpec)
	if in.Bundles != nil {
		in, out := &in.Bundles, &out.Bundles
		*out = make([]RedisBundle, len(*in))
		copy(*out, *in)
	}
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]RedisDataCentre, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisSpec.
func (in *RedisSpec) DeepCopy() *RedisSpec {
	if in == nil {
		return nil
	}
	out := new(RedisSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisStatus) DeepCopyInto(out *RedisStatus) {
	*out = *in
	out.ClusterStatus = in.ClusterStatus
	if in.DataCentres != nil {
		in, out := &in.DataCentres, &out.DataCentres
		*out = make([]RedisDataCentreStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisStatus.
func (in *RedisStatus) DeepCopy() *RedisStatus {
	if in == nil {
		return nil
	}
	out := new(RedisStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleType) DeepCopyInto(out *RuleType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleType.
func (in *RuleType) DeepCopy() *RuleType {
	if in == nil {
		return nil
	}
	out := new(RuleType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwoFactorDelete) DeepCopyInto(out *TwoFactorDelete) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwoFactorDelete.
func (in *TwoFactorDelete) DeepCopy() *TwoFactorDelete {
	if in == nil {
		return nil
	}
	out := new(TwoFactorDelete)
	in.DeepCopyInto(out)
	return out
}
