/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaConnectManagedTargetClusterDetailsV2 -
type KafkaConnectManagedTargetClusterDetailsV2 struct {

	// Available options are KAFKA_VPC, VPC_PEERED, SEPARATE_VPC
	KafkaConnectVpcType string `json:"kafkaConnectVpcType"`

	// Target kafka cluster id.
	TargetKafkaClusterId string `json:"targetKafkaClusterId"`
}

// AssertKafkaConnectManagedTargetClusterDetailsV2Required checks if the required fields are not zero-ed
func AssertKafkaConnectManagedTargetClusterDetailsV2Required(obj KafkaConnectManagedTargetClusterDetailsV2) error {
	elements := map[string]interface{}{
		"kafkaConnectVpcType":  obj.KafkaConnectVpcType,
		"targetKafkaClusterId": obj.TargetKafkaClusterId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaConnectManagedTargetClusterDetailsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaConnectManagedTargetClusterDetailsV2 (e.g. [][]KafkaConnectManagedTargetClusterDetailsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaConnectManagedTargetClusterDetailsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaConnectManagedTargetClusterDetailsV2, ok := obj.(KafkaConnectManagedTargetClusterDetailsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaConnectManagedTargetClusterDetailsV2Required(aKafkaConnectManagedTargetClusterDetailsV2)
	})
}
