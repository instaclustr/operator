/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type OpenSearchOptionsSchema struct {

	// This is an optional boolean parameter used to scale the load of the data node by having 3 dedicated master nodes for a particular cluster. We recommend selecting this to true for clusters with 9 and above nodes.
	DedicatedMasterNodes bool `json:"dedicatedMasterNodes,omitempty"`

	// Only to be included if the if dedicatedMasterNodes is set to true. See Available cluster node sizes in <a href='#operation/extendedProvisionRequestHandler'>Provisioning API</a>
	MasterNodeSize string `json:"masterNodeSize,omitempty"`

	// This is an optional string parameter to used to define the OpenSearch Dashboards node size. Only to be included if wish to add an OpenSearch Dashboards node to the cluster. See Available cluster node sizes in <a href='#operation/extendedProvisionRequestHandler'>Provisioning API</a>
	OpenSearchDashboardsNodeSize string `json:"openSearchDashboardsNodeSize,omitempty"`

	// Enables Index Management Plugin. This helps automate recurring index management activities.
	IndexManagementPlugin bool `json:"indexManagementPlugin,omitempty"`

	// Enables the Anomaly Detection Plugin. This allows for the detection of unusual or anomalous data points in your time-series data. Supported on OpenSearch 2.x for versions >= 2.4.0 and 1.x for versions >= 1.3.7
	AnomalyDetectionPlugin bool `json:"anomalyDetectionPlugin,omitempty"`

	// Enables the SQL Plugin. This allows you to query you indices with SQL as an alternative to the OpenSearch Query DSL. Supported on OpenSearch 2.x for versions >= 2.4.0 and 1.x for versions >= 1.3.7
	SqlPlugin bool `json:"sqlPlugin,omitempty"`

	// Enables the Anomaly Detection Plugin. This allows you to submit queries to be completed asynchronously. Supported on OpenSearch 2.x for versions >= 2.4.0 and 1.x for versions 1.3.7
	AsynchronousSearchPlugin bool `json:"asynchronousSearchPlugin,omitempty"`
}

// AssertOpenSearchOptionsSchemaRequired checks if the required fields are not zero-ed
func AssertOpenSearchOptionsSchemaRequired(obj OpenSearchOptionsSchema) error {
	return nil
}

// AssertOpenSearchOptionsSchemaConstraints checks if the values respects the defined constraints
func AssertOpenSearchOptionsSchemaConstraints(obj OpenSearchOptionsSchema) error {
	return nil
}
