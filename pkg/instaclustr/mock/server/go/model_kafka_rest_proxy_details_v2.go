/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaRestProxyDetailsV2 -
type KafkaRestProxyDetailsV2 struct {

	// Enables Integration of the REST proxy with a Schema registry.
	IntegrateRestProxyWithSchemaRegistry bool `json:"integrateRestProxyWithSchemaRegistry"`

	// Password to use when connecting to the Kafka schema registry. Requires 'integrateRestProxyWithSchemaRegistry' to be 'true' and useLocalSchemaRegistry to be 'false'.
	SchemaRegistryPassword string `json:"schemaRegistryPassword,omitempty"`

	// URL of the Kafka schema registry to integrate with. Requires 'integrateRestProxyWithSchemaRegistry' to be 'true' and useLocalSchemaRegistry to be 'false'.
	SchemaRegistryServerUrl string `json:"schemaRegistryServerUrl,omitempty"`

	// Username to use when connecting to the Kafka schema registry. Requires 'integrateRestProxyWithSchemaRegistry' to be 'true' and useLocalSchemaRegistry to be 'false'.
	SchemaRegistryUsername string `json:"schemaRegistryUsername,omitempty"`

	// Integrates the REST proxy with the Schema registry attached to this cluster. Requires 'integrateRestProxyWithSchemaRegistry' to be 'true'.
	UseLocalSchemaRegistry bool `json:"useLocalSchemaRegistry,omitempty"`

	// Adds the specified version of Kafka REST Proxy to the Kafka cluster. Available versions: <ul> <li>`5.0.4`</li> <li>`5.0.0`</li> </ul>
	Version string `json:"version"`
}

// AssertKafkaRestProxyDetailsV2Required checks if the required fields are not zero-ed
func AssertKafkaRestProxyDetailsV2Required(obj KafkaRestProxyDetailsV2) error {
	elements := map[string]interface{}{
		"integrateRestProxyWithSchemaRegistry": obj.IntegrateRestProxyWithSchemaRegistry,
		"version":                              obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaRestProxyDetailsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaRestProxyDetailsV2 (e.g. [][]KafkaRestProxyDetailsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaRestProxyDetailsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaRestProxyDetailsV2, ok := obj.(KafkaRestProxyDetailsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaRestProxyDetailsV2Required(aKafkaRestProxyDetailsV2)
	})
}
