/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PostgresqlConfigurationPropertiesV2 - PostgreSQL configuration properties
type PostgresqlConfigurationPropertiesV2 struct {

	// ID of the PostgreSQL cluster
	ClusterId string `json:"clusterId,omitempty"`

	// List of configuration properties
	ConfigurationProperties []PostgresqlConfigurationPropertyV2 `json:"configurationProperties"`
}

// AssertPostgresqlConfigurationPropertiesV2Required checks if the required fields are not zero-ed
func AssertPostgresqlConfigurationPropertiesV2Required(obj PostgresqlConfigurationPropertiesV2) error {
	elements := map[string]interface{}{
		"configurationProperties": obj.ConfigurationProperties,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ConfigurationProperties {
		if err := AssertPostgresqlConfigurationPropertyV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecursePostgresqlConfigurationPropertiesV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PostgresqlConfigurationPropertiesV2 (e.g. [][]PostgresqlConfigurationPropertiesV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePostgresqlConfigurationPropertiesV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPostgresqlConfigurationPropertiesV2, ok := obj.(PostgresqlConfigurationPropertiesV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPostgresqlConfigurationPropertiesV2Required(aPostgresqlConfigurationPropertiesV2)
	})
}
