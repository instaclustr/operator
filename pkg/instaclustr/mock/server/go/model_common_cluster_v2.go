/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// CommonClusterV2 -
type CommonClusterV2 struct {
	CurrentClusterOperationStatus CurrentClusterOperationStatusV2 `json:"currentClusterOperationStatus,omitempty"`

	// Creates the cluster with private network only, see [Private Network Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
	PrivateNetworkCluster bool `json:"privateNetworkCluster"`

	// Name of the cluster.
	Name string `json:"name"`

	//
	TwoFactorDelete []TwoFactorDeleteSettingsV2 `json:"twoFactorDelete,omitempty"`

	// ID of the cluster.
	Id string `json:"id,omitempty"`

	SlaTier SlaTierV2 `json:"slaTier"`

	// Status of the cluster.
	Status string `json:"status,omitempty"`
}

// AssertCommonClusterV2Required checks if the required fields are not zero-ed
func AssertCommonClusterV2Required(obj CommonClusterV2) error {
	elements := map[string]interface{}{
		"privateNetworkCluster": obj.PrivateNetworkCluster,
		"name":                  obj.Name,
		"slaTier":               obj.SlaTier,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.TwoFactorDelete {
		if err := AssertTwoFactorDeleteSettingsV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseCommonClusterV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CommonClusterV2 (e.g. [][]CommonClusterV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCommonClusterV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCommonClusterV2, ok := obj.(CommonClusterV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCommonClusterV2Required(aCommonClusterV2)
	})
}
