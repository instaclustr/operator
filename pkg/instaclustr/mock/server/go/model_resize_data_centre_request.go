/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

type ResizeDataCentreRequest struct {

	// The desired node size.  See https://www.instaclustr.com/support/documentation/useful-information/supported-instances-and-usecases/ for valid values.
	NewNodeSize string `json:"newNodeSize"`

	// A number, from 1 to the count of nodes in the largest rack, that specifies how many nodes may be resized at the same time.
	ConcurrentResizes int32 `json:"concurrentResizes"`

	NotifySupportContacts bool `json:"notifySupportContacts"`

	// A valid node purpose for the cdc. You can get the allowed node purposes for a CDC by GET /provisioning/v1/{clusterId}/{clusterDataCentreId}/nodepurposes
	NodePurpose string `json:"nodePurpose,omitempty"`
}

// AssertResizeDataCentreRequestRequired checks if the required fields are not zero-ed
func AssertResizeDataCentreRequestRequired(obj ResizeDataCentreRequest) error {
	elements := map[string]interface{}{
		"newNodeSize":           obj.NewNodeSize,
		"concurrentResizes":     obj.ConcurrentResizes,
		"notifySupportContacts": obj.NotifySupportContacts,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertResizeDataCentreRequestConstraints checks if the values respects the defined constraints
func AssertResizeDataCentreRequestConstraints(obj ResizeDataCentreRequest) error {
	if obj.ConcurrentResizes < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
