/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaTopicV2 - Definition of a Kafka Topic to be applied to a Kafka cluster.
type KafkaTopicV2 struct {

	// Topic partition count
	Partitions int32 `json:"partitions"`

	// List of the the Kafka cluster configs
	Configs []KafkaTopicConfigV2 `json:"configs,omitempty"`

	// Replication factor for Topic
	ReplicationFactor int32 `json:"replicationFactor"`

	// Kafka Topic name
	Topic string `json:"topic"`

	// ID of the Kafka cluster
	ClusterId string `json:"clusterId"`

	// Instaclustr identifier for the Kafka topic. The value of this property has the form: [cluster-id]_[kafka-topic]
	Id string `json:"id,omitempty"`
}

// AssertKafkaTopicV2Required checks if the required fields are not zero-ed
func AssertKafkaTopicV2Required(obj KafkaTopicV2) error {
	elements := map[string]interface{}{
		"partitions":        obj.Partitions,
		"replicationFactor": obj.ReplicationFactor,
		"topic":             obj.Topic,
		"clusterId":         obj.ClusterId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Configs {
		if err := AssertKafkaTopicConfigV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseKafkaTopicV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaTopicV2 (e.g. [][]KafkaTopicV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaTopicV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaTopicV2, ok := obj.(KafkaTopicV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaTopicV2Required(aKafkaTopicV2)
	})
}
