/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// OpenSearchEgressRulesV2 - List of OpenSearch egress rules
type OpenSearchEgressRulesV2 struct {

	// List of OpenSearch egress rules
	Rules []OpenSearchEgressRuleV2 `json:"rules"`

	// OpenSearch cluster id
	ClusterId string `json:"clusterId,omitempty"`
}

// AssertOpenSearchEgressRulesV2Required checks if the required fields are not zero-ed
func AssertOpenSearchEgressRulesV2Required(obj OpenSearchEgressRulesV2) error {
	elements := map[string]interface{}{
		"rules": obj.Rules,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Rules {
		if err := AssertOpenSearchEgressRuleV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseOpenSearchEgressRulesV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of OpenSearchEgressRulesV2 (e.g. [][]OpenSearchEgressRulesV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseOpenSearchEgressRulesV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aOpenSearchEgressRulesV2, ok := obj.(OpenSearchEgressRulesV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertOpenSearchEgressRulesV2Required(aOpenSearchEgressRulesV2)
	})
}
