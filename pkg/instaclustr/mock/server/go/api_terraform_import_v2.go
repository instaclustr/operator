/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// TerraformImportV2ApiController binds http requests to an api service and writes the service results to the http response
type TerraformImportV2ApiController struct {
	service      TerraformImportV2ApiServicer
	errorHandler ErrorHandler
}

// TerraformImportV2ApiOption for how the controller is set up.
type TerraformImportV2ApiOption func(*TerraformImportV2ApiController)

// WithTerraformImportV2ApiErrorHandler inject ErrorHandler into controller
func WithTerraformImportV2ApiErrorHandler(h ErrorHandler) TerraformImportV2ApiOption {
	return func(c *TerraformImportV2ApiController) {
		c.errorHandler = h
	}
}

// NewTerraformImportV2ApiController creates a default api controller
func NewTerraformImportV2ApiController(s TerraformImportV2ApiServicer, opts ...TerraformImportV2ApiOption) Router {
	controller := &TerraformImportV2ApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the TerraformImportV2ApiController
func (c *TerraformImportV2ApiController) Routes() Routes {
	return Routes{
		{
			"ClusterManagementV2OperationsGenerateTerraformCodeV2Get",
			strings.ToUpper("Get"),
			"/cluster-management/v2/operations/generate-terraform-code/v2",
			c.ClusterManagementV2OperationsGenerateTerraformCodeV2Get,
		},
	}
}

// ClusterManagementV2OperationsGenerateTerraformCodeV2Get - Download terraform configuration files
func (c *TerraformImportV2ApiController) ClusterManagementV2OperationsGenerateTerraformCodeV2Get(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ClusterManagementV2OperationsGenerateTerraformCodeV2Get(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
