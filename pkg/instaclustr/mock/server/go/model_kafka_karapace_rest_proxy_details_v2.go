/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaKarapaceRestProxyDetailsV2 -
type KafkaKarapaceRestProxyDetailsV2 struct {

	// Enables Integration of the Karapace REST proxy with the local Karapace Schema registry.
	IntegrateRestProxyWithSchemaRegistry bool `json:"integrateRestProxyWithSchemaRegistry"`

	// Adds the specified version of Kafka REST Proxy to the Kafka cluster. Available versions: <ul> <li>`3.2.0`</li> </ul>
	Version string `json:"version"`
}

// AssertKafkaKarapaceRestProxyDetailsV2Required checks if the required fields are not zero-ed
func AssertKafkaKarapaceRestProxyDetailsV2Required(obj KafkaKarapaceRestProxyDetailsV2) error {
	elements := map[string]interface{}{
		"integrateRestProxyWithSchemaRegistry": obj.IntegrateRestProxyWithSchemaRegistry,
		"version":                              obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaKarapaceRestProxyDetailsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaKarapaceRestProxyDetailsV2 (e.g. [][]KafkaKarapaceRestProxyDetailsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaKarapaceRestProxyDetailsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaKarapaceRestProxyDetailsV2, ok := obj.(KafkaKarapaceRestProxyDetailsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaKarapaceRestProxyDetailsV2Required(aKafkaKarapaceRestProxyDetailsV2)
	})
}
