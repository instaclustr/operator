/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// AWSEncryptionKeyV2ApiRouter defines the required methods for binding the api requests to a responses for the AWSEncryptionKeyV2Api
// The AWSEncryptionKeyV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AWSEncryptionKeyV2ApiServicer to perform the required actions, then write the service results to the http response.
type AWSEncryptionKeyV2ApiRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsEncryptionKeysV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2Post(http.ResponseWriter, *http.Request)
}

// AWSEndpointServicePrincipalsV2ApiRouter defines the required methods for binding the api requests to a responses for the AWSEndpointServicePrincipalsV2Api
// The AWSEndpointServicePrincipalsV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AWSEndpointServicePrincipalsV2ApiServicer to perform the required actions, then write the service results to the http response.
type AWSEndpointServicePrincipalsV2ApiRouter interface {
	ClusterManagementV2DataSourcesClusterDataCenterClusterDataCenterIdAwsEndpointServicePrincipalsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdGet(http.ResponseWriter, *http.Request)
}

// AWSSecurityGroupFirewallRuleV2ApiRouter defines the required methods for binding the api requests to a responses for the AWSSecurityGroupFirewallRuleV2Api
// The AWSSecurityGroupFirewallRuleV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AWSSecurityGroupFirewallRuleV2ApiServicer to perform the required actions, then write the service results to the http response.
type AWSSecurityGroupFirewallRuleV2ApiRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsAwsClusterClusterIdSecurityGroupFirewallRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2Post(http.ResponseWriter, *http.Request)
}

// AWSVPCPeerV2ApiRouter defines the required methods for binding the api requests to a responses for the AWSVPCPeerV2Api
// The AWSVPCPeerV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AWSVPCPeerV2ApiServicer to perform the required actions, then write the service results to the http response.
type AWSVPCPeerV2ApiRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsVpcPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdPut(http.ResponseWriter, *http.Request)
}

// AccountClusterListV2ApiRouter defines the required methods for binding the api requests to a responses for the AccountClusterListV2Api
// The AccountClusterListV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AccountClusterListV2ApiServicer to perform the required actions, then write the service results to the http response.
type AccountClusterListV2ApiRouter interface {
	ClusterManagementV2DataSourcesClustersV2Get(http.ResponseWriter, *http.Request)
}

// ApacheZookeeperClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the ApacheZookeeperClusterV2Api
// The ApacheZookeeperClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheZookeeperClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type ApacheZookeeperClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post(http.ResponseWriter, *http.Request)
}

// AzureVnetPeerV2ApiRouter defines the required methods for binding the api requests to a responses for the AzureVnetPeerV2Api
// The AzureVnetPeerV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a AzureVnetPeerV2ApiServicer to perform the required actions, then write the service results to the http response.
type AzureVnetPeerV2ApiRouter interface {
	ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
}

// CadenceClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the CadenceClusterV2Api
// The CadenceClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a CadenceClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type CadenceClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2Post(http.ResponseWriter, *http.Request)
}

// CassandraClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the CassandraClusterV2Api
// The CassandraClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a CassandraClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type CassandraClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2Post(http.ResponseWriter, *http.Request)
}

// ClusterNetworkFirewallRuleV2ApiRouter defines the required methods for binding the api requests to a responses for the ClusterNetworkFirewallRuleV2Api
// The ClusterNetworkFirewallRuleV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a ClusterNetworkFirewallRuleV2ApiServicer to perform the required actions, then write the service results to the http response.
type ClusterNetworkFirewallRuleV2ApiRouter interface {
	ClusterManagementV2DataSourcesClusterClusterIdNetworkFirewallRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2Post(http.ResponseWriter, *http.Request)
}

// GCPVPCPeerV2ApiRouter defines the required methods for binding the api requests to a responses for the GCPVPCPeerV2Api
// The GCPVPCPeerV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a GCPVPCPeerV2ApiServicer to perform the required actions, then write the service results to the http response.
type GCPVPCPeerV2ApiRouter interface {
	ClusterManagementV2DataSourcesProvidersGcpVpcPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
}

// KafkaACLV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaACLV2Api
// The KafkaACLV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaACLV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaACLV2ApiRouter interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdAclsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2Post(http.ResponseWriter, *http.Request)
}

// KafkaClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaClusterV2Api
// The KafkaClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post(http.ResponseWriter, *http.Request)
}

// KafkaConnectClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaConnectClusterV2Api
// The KafkaConnectClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaConnectClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaConnectClusterV2ApiRouter interface {
	ClusterManagementV2OperationsApplicationsKafkaConnectClustersV2ClusterIdSyncCustomKafkaConnectorsV2Put(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2Post(http.ResponseWriter, *http.Request)
}

// KafkaConnectMirrorV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaConnectMirrorV2Api
// The KafkaConnectMirrorV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaConnectMirrorV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaConnectMirrorV2ApiRouter interface {
	ClusterManagementV2DataSourcesKafkaConnectClusterClusterIdMirrorsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2Post(http.ResponseWriter, *http.Request)
}

// KafkaTopicV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaTopicV2Api
// The KafkaTopicV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaTopicV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaTopicV2ApiRouter interface {
	ClusterManagementV2OperationsApplicationsKafkaTopicsV2KafkaTopicIdModifyConfigsV2Put(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2Post(http.ResponseWriter, *http.Request)
}

// KafkaUserV2ApiRouter defines the required methods for binding the api requests to a responses for the KafkaUserV2Api
// The KafkaUserV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a KafkaUserV2ApiServicer to perform the required actions, then write the service results to the http response.
type KafkaUserV2ApiRouter interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2Post(http.ResponseWriter, *http.Request)
}

// MongodbClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the MongodbClusterV2Api
// The MongodbClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a MongodbClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type MongodbClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2Post(http.ResponseWriter, *http.Request)
}

// OpenAPISpecificationV2ApiRouter defines the required methods for binding the api requests to a responses for the OpenAPISpecificationV2Api
// The OpenAPISpecificationV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a OpenAPISpecificationV2ApiServicer to perform the required actions, then write the service results to the http response.
type OpenAPISpecificationV2ApiRouter interface {
	ClusterManagementV2OpenApiSpecificationCurrentGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2OpenApiSpecificationDeprecatedGet(http.ResponseWriter, *http.Request)
}

// OpenSearchClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the OpenSearchClusterV2Api
// The OpenSearchClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a OpenSearchClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type OpenSearchClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post(http.ResponseWriter, *http.Request)
}

// OpenSearchEgressRulesV2ApiRouter defines the required methods for binding the api requests to a responses for the OpenSearchEgressRulesV2Api
// The OpenSearchEgressRulesV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a OpenSearchEgressRulesV2ApiServicer to perform the required actions, then write the service results to the http response.
type OpenSearchEgressRulesV2ApiRouter interface {
	ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post(http.ResponseWriter, *http.Request)
}

// PostgresqlClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the PostgresqlClusterV2Api
// The PostgresqlClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a PostgresqlClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type PostgresqlClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2Post(http.ResponseWriter, *http.Request)
}

// PostgresqlConfigurationV2ApiRouter defines the required methods for binding the api requests to a responses for the PostgresqlConfigurationV2Api
// The PostgresqlConfigurationV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a PostgresqlConfigurationV2ApiServicer to perform the required actions, then write the service results to the http response.
type PostgresqlConfigurationV2ApiRouter interface {
	ClusterManagementV2DataSourcesPostgresqlClusterClusterIdConfigurationsGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2Post(http.ResponseWriter, *http.Request)
}

// PostgresqlReloadOperationV2ApiRouter defines the required methods for binding the api requests to a responses for the PostgresqlReloadOperationV2Api
// The PostgresqlReloadOperationV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a PostgresqlReloadOperationV2ApiServicer to perform the required actions, then write the service results to the http response.
type PostgresqlReloadOperationV2ApiRouter interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdReloadGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadPost(http.ResponseWriter, *http.Request)
}

// PostgresqlUserV2ApiRouter defines the required methods for binding the api requests to a responses for the PostgresqlUserV2Api
// The PostgresqlUserV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a PostgresqlUserV2ApiServicer to perform the required actions, then write the service results to the http response.
type PostgresqlUserV2ApiRouter interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdUpdateDefaultUserPasswordPut(http.ResponseWriter, *http.Request)
}

// RedisClusterV2ApiRouter defines the required methods for binding the api requests to a responses for the RedisClusterV2Api
// The RedisClusterV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a RedisClusterV2ApiServicer to perform the required actions, then write the service results to the http response.
type RedisClusterV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2Post(http.ResponseWriter, *http.Request)
}

// RedisUserV2ApiRouter defines the required methods for binding the api requests to a responses for the RedisUserV2Api
// The RedisUserV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a RedisUserV2ApiServicer to perform the required actions, then write the service results to the http response.
type RedisUserV2ApiRouter interface {
	ClusterManagementV2ResourcesApplicationsRedisUsersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdPut(http.ResponseWriter, *http.Request)
}

// SwaggerV2ApiRouter defines the required methods for binding the api requests to a responses for the SwaggerV2Api
// The SwaggerV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a SwaggerV2ApiServicer to perform the required actions, then write the service results to the http response.
type SwaggerV2ApiRouter interface {
	ClusterManagementV2SwaggerForTerraformYamlGet(http.ResponseWriter, *http.Request)
}

// TerraformDocumentationV2ApiRouter defines the required methods for binding the api requests to a responses for the TerraformDocumentationV2Api
// The TerraformDocumentationV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a TerraformDocumentationV2ApiServicer to perform the required actions, then write the service results to the http response.
type TerraformDocumentationV2ApiRouter interface {
	ClusterManagementV2OperationsGenerateTerraformDocumentationV2Get(http.ResponseWriter, *http.Request)
}

// TerraformImportV2ApiRouter defines the required methods for binding the api requests to a responses for the TerraformImportV2Api
// The TerraformImportV2ApiRouter implementation should parse necessary information from the http request,
// pass the data to a TerraformImportV2ApiServicer to perform the required actions, then write the service results to the http response.
type TerraformImportV2ApiRouter interface {
	ClusterManagementV2OperationsGenerateTerraformCodeV2Get(http.ResponseWriter, *http.Request)
}

// AWSEncryptionKeyV2ApiServicer defines the api actions for the AWSEncryptionKeyV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSEncryptionKeyV2ApiServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsEncryptionKeysV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2Post(context.Context, AwsEncryptionKeyV2) (ImplResponse, error)
}

// AWSEndpointServicePrincipalsV2ApiServicer defines the api actions for the AWSEndpointServicePrincipalsV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSEndpointServicePrincipalsV2ApiServicer interface {
	ClusterManagementV2DataSourcesClusterDataCenterClusterDataCenterIdAwsEndpointServicePrincipalsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2Post(context.Context, IamPrincipalArnV2) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdGet(context.Context, string) (ImplResponse, error)
}

// AWSSecurityGroupFirewallRuleV2ApiServicer defines the api actions for the AWSSecurityGroupFirewallRuleV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSSecurityGroupFirewallRuleV2ApiServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsAwsClusterClusterIdSecurityGroupFirewallRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2Post(context.Context, AwsSecurityGroupFirewallRuleV2) (ImplResponse, error)
}

// AWSVPCPeerV2ApiServicer defines the api actions for the AWSVPCPeerV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSVPCPeerV2ApiServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsVpcPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2Post(context.Context, AwsVpcPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdPut(context.Context, string, AwsVpcPeerUpdateV2) (ImplResponse, error)
}

// AccountClusterListV2ApiServicer defines the api actions for the AccountClusterListV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AccountClusterListV2ApiServicer interface {
	ClusterManagementV2DataSourcesClustersV2Get(context.Context) (ImplResponse, error)
}

// ApacheZookeeperClusterV2ApiServicer defines the api actions for the ApacheZookeeperClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheZookeeperClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post(context.Context, ApacheZookeeperClusterV2) (ImplResponse, error)
}

// AzureVnetPeerV2ApiServicer defines the api actions for the AzureVnetPeerV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AzureVnetPeerV2ApiServicer interface {
	ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post(context.Context, AzureVnetPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
}

// CadenceClusterV2ApiServicer defines the api actions for the CadenceClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CadenceClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdPut(context.Context, string, CadenceClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2Post(context.Context, CadenceClusterV2) (ImplResponse, error)
}

// CassandraClusterV2ApiServicer defines the api actions for the CassandraClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CassandraClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdPut(context.Context, string, CassandraClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2Post(context.Context, CassandraClusterV2) (ImplResponse, error)
}

// ClusterNetworkFirewallRuleV2ApiServicer defines the api actions for the ClusterNetworkFirewallRuleV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClusterNetworkFirewallRuleV2ApiServicer interface {
	ClusterManagementV2DataSourcesClusterClusterIdNetworkFirewallRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2Post(context.Context, ClusterNetworkFirewallRuleV2) (ImplResponse, error)
}

// GCPVPCPeerV2ApiServicer defines the api actions for the GCPVPCPeerV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GCPVPCPeerV2ApiServicer interface {
	ClusterManagementV2DataSourcesProvidersGcpVpcPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2Post(context.Context, GcpVpcPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
}

// KafkaACLV2ApiServicer defines the api actions for the KafkaACLV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaACLV2ApiServicer interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdAclsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdPut(context.Context, string, KafkaAclListV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2Post(context.Context, KafkaAclListV2) (ImplResponse, error)
}

// KafkaClusterV2ApiServicer defines the api actions for the KafkaClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut(context.Context, string, KafkaClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post(context.Context, KafkaClusterV2) (ImplResponse, error)
}

// KafkaConnectClusterV2ApiServicer defines the api actions for the KafkaConnectClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaConnectClusterV2ApiServicer interface {
	ClusterManagementV2OperationsApplicationsKafkaConnectClustersV2ClusterIdSyncCustomKafkaConnectorsV2Put(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdPut(context.Context, string, KafkaConnectClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2Post(context.Context, KafkaConnectClusterV2) (ImplResponse, error)
}

// KafkaConnectMirrorV2ApiServicer defines the api actions for the KafkaConnectMirrorV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaConnectMirrorV2ApiServicer interface {
	ClusterManagementV2DataSourcesKafkaConnectClusterClusterIdMirrorsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdPut(context.Context, string, KafkaConnectMirrorUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2Post(context.Context, KafkaConnectMirrorV2) (ImplResponse, error)
}

// KafkaTopicV2ApiServicer defines the api actions for the KafkaTopicV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaTopicV2ApiServicer interface {
	ClusterManagementV2OperationsApplicationsKafkaTopicsV2KafkaTopicIdModifyConfigsV2Put(context.Context, string, KafkaTopicConfigsV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2Post(context.Context, KafkaTopicV2) (ImplResponse, error)
}

// KafkaUserV2ApiServicer defines the api actions for the KafkaUserV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KafkaUserV2ApiServicer interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdPut(context.Context, string, KafkaUserV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2Post(context.Context, KafkaUserV2) (ImplResponse, error)
}

// MongodbClusterV2ApiServicer defines the api actions for the MongodbClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MongodbClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsMongodbClustersV2Post(context.Context, MongodbClusterV2) (ImplResponse, error)
}

// OpenAPISpecificationV2ApiServicer defines the api actions for the OpenAPISpecificationV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OpenAPISpecificationV2ApiServicer interface {
	ClusterManagementV2OpenApiSpecificationCurrentGet(context.Context) (ImplResponse, error)
	ClusterManagementV2OpenApiSpecificationDeprecatedGet(context.Context) (ImplResponse, error)
}

// OpenSearchClusterV2ApiServicer defines the api actions for the OpenSearchClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OpenSearchClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut(context.Context, string, OpenSearchClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post(context.Context, OpenSearchClusterV2) (ImplResponse, error)
}

// OpenSearchEgressRulesV2ApiServicer defines the api actions for the OpenSearchEgressRulesV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OpenSearchEgressRulesV2ApiServicer interface {
	ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post(context.Context, OpenSearchEgressRuleV2) (ImplResponse, error)
}

// PostgresqlClusterV2ApiServicer defines the api actions for the PostgresqlClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgresqlClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdPut(context.Context, string, PostgresqlClusterUpdateV2) (ImplResponse, error)
	ClusterManagementConfigurationV1ResourcesApplicationsPostgresqlClustersV2Put(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2Post(context.Context, PostgresqlClusterV2) (ImplResponse, error)
}

// PostgresqlConfigurationV2ApiServicer defines the api actions for the PostgresqlConfigurationV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgresqlConfigurationV2ApiServicer interface {
	ClusterManagementV2DataSourcesPostgresqlClusterClusterIdConfigurationsGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdPut(context.Context, string, PostgresqlConfigurationPropertyUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2Post(context.Context, PostgresqlConfigurationPropertyV2) (ImplResponse, error)
}

// PostgresqlReloadOperationV2ApiServicer defines the api actions for the PostgresqlReloadOperationV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgresqlReloadOperationV2ApiServicer interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdReloadGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadPost(context.Context, string) (ImplResponse, error)
}

// PostgresqlUserV2ApiServicer defines the api actions for the PostgresqlUserV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgresqlUserV2ApiServicer interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdUpdateDefaultUserPasswordPut(context.Context, string, PostgresqlUserSummary) (ImplResponse, error)
}

// RedisClusterV2ApiServicer defines the api actions for the RedisClusterV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RedisClusterV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdPut(context.Context, string, RedisClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2Post(context.Context, RedisClusterV2) (ImplResponse, error)
}

// RedisUserV2ApiServicer defines the api actions for the RedisUserV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RedisUserV2ApiServicer interface {
	ClusterManagementV2ResourcesApplicationsRedisUsersV2Post(context.Context, RedisUserV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdPut(context.Context, string, RedisUserPasswordV2) (ImplResponse, error)
}

// SwaggerV2ApiServicer defines the api actions for the SwaggerV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SwaggerV2ApiServicer interface {
	ClusterManagementV2SwaggerForTerraformYamlGet(context.Context) (ImplResponse, error)
}

// TerraformDocumentationV2ApiServicer defines the api actions for the TerraformDocumentationV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TerraformDocumentationV2ApiServicer interface {
	ClusterManagementV2OperationsGenerateTerraformDocumentationV2Get(context.Context) (ImplResponse, error)
}

// TerraformImportV2ApiServicer defines the api actions for the TerraformImportV2Api service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TerraformImportV2ApiServicer interface {
	ClusterManagementV2OperationsGenerateTerraformCodeV2Get(context.Context) (ImplResponse, error)
}
