/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// AWSEncryptionKeyV2APIRouter defines the required methods for binding the api requests to a responses for the AWSEncryptionKeyV2API
// The AWSEncryptionKeyV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AWSEncryptionKeyV2APIServicer to perform the required actions, then write the service results to the http response.
type AWSEncryptionKeyV2APIRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsEncryptionKeysV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsProvidersAwsEncryptionKeysV2EncryptionKeyIdValidateV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2Post(http.ResponseWriter, *http.Request)
}

// AWSEndpointServicePrincipalsV2APIRouter defines the required methods for binding the api requests to a responses for the AWSEndpointServicePrincipalsV2API
// The AWSEndpointServicePrincipalsV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AWSEndpointServicePrincipalsV2APIServicer to perform the required actions, then write the service results to the http response.
type AWSEndpointServicePrincipalsV2APIRouter interface {
	ClusterManagementV2DataSourcesClusterDataCenterClusterDataCenterIdAwsEndpointServicePrincipalsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdGet(http.ResponseWriter, *http.Request)
}

// AWSSecurityGroupFirewallRuleV2APIRouter defines the required methods for binding the api requests to a responses for the AWSSecurityGroupFirewallRuleV2API
// The AWSSecurityGroupFirewallRuleV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AWSSecurityGroupFirewallRuleV2APIServicer to perform the required actions, then write the service results to the http response.
type AWSSecurityGroupFirewallRuleV2APIRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsAwsClusterClusterIdSecurityGroupFirewallRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2Post(http.ResponseWriter, *http.Request)
}

// AWSVPCPeerV2APIRouter defines the required methods for binding the api requests to a responses for the AWSVPCPeerV2API
// The AWSVPCPeerV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AWSVPCPeerV2APIServicer to perform the required actions, then write the service results to the http response.
type AWSVPCPeerV2APIRouter interface {
	ClusterManagementV2DataSourcesProvidersAwsVpcPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdPut(http.ResponseWriter, *http.Request)
}

// AccountClusterListV2APIRouter defines the required methods for binding the api requests to a responses for the AccountClusterListV2API
// The AccountClusterListV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AccountClusterListV2APIServicer to perform the required actions, then write the service results to the http response.
type AccountClusterListV2APIRouter interface {
	ClusterManagementV2DataSourcesClustersV2Get(http.ResponseWriter, *http.Request)
}

// ApacheCassandraProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheCassandraProvisioningV2API
// The ApacheCassandraProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheCassandraProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheCassandraProvisioningV2APIRouter interface {
	ClusterManagementV2DataSourcesApplicationsCassandraClustersV2ClusterIdListBackupsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsCassandraClustersV2ClusterIdTriggerBackupV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsCassandraRestoreV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaACLV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaACLV2API
// The ApacheKafkaACLV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaACLV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaACLV2APIRouter interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdAclsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaConnectMirrorV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaConnectMirrorV2API
// The ApacheKafkaConnectMirrorV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaConnectMirrorV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaConnectMirrorV2APIRouter interface {
	ClusterManagementV2DataSourcesKafkaConnectClusterClusterIdMirrorsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaConnectProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaConnectProvisioningV2API
// The ApacheKafkaConnectProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaConnectProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaConnectProvisioningV2APIRouter interface {
	ClusterManagementV2OperationsApplicationsKafkaConnectClustersV2ClusterIdSyncCustomKafkaConnectorsV2Put(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaProvisioningV2API
// The ApacheKafkaProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaProvisioningV2APIRouter interface {
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaRestProxyUserAPIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaRestProxyUserAPI
// The ApacheKafkaRestProxyUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaRestProxyUserAPIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaRestProxyUserAPIRouter interface {
	ClusterManagementV2DataSourcesKafkaRestProxyClusterClusterIdKafkaRestProxyUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKafkaRestProxyClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(http.ResponseWriter, *http.Request)
}

// ApacheKafkaSchemaRegistryUserAPIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaSchemaRegistryUserAPI
// The ApacheKafkaSchemaRegistryUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaSchemaRegistryUserAPIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaSchemaRegistryUserAPIRouter interface {
	ClusterManagementV2DataSourcesKafkaSchemaRegistryClusterClusterIdKafkaSchemaRegistryUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKafkaSchemaRegistryClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(http.ResponseWriter, *http.Request)
}

// ApacheKafkaTopicV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaTopicV2API
// The ApacheKafkaTopicV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaTopicV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaTopicV2APIRouter interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdTopicsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKafkaTopicsV2KafkaTopicIdModifyConfigsV2Put(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2Post(http.ResponseWriter, *http.Request)
}

// ApacheKafkaUserAPIRouter defines the required methods for binding the api requests to a responses for the ApacheKafkaUserAPI
// The ApacheKafkaUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheKafkaUserAPIServicer to perform the required actions, then write the service results to the http response.
type ApacheKafkaUserAPIRouter interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2DataSourcesKafkaUsersKafkaUserIdCertificatesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKafkaUserCertificatesCertificateIdDownloadV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKafkaUserCertificatesRenewV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2CertificateIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2CertificateIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2Post(http.ResponseWriter, *http.Request)
}

// ApacheZookeeperProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the ApacheZookeeperProvisioningV2API
// The ApacheZookeeperProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ApacheZookeeperProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type ApacheZookeeperProvisioningV2APIRouter interface {
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post(http.ResponseWriter, *http.Request)
}

// AzureVnetPeerV2APIRouter defines the required methods for binding the api requests to a responses for the AzureVnetPeerV2API
// The AzureVnetPeerV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a AzureVnetPeerV2APIServicer to perform the required actions, then write the service results to the http response.
type AzureVnetPeerV2APIRouter interface {
	ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
}

// BundleUserAPIRouter defines the required methods for binding the api requests to a responses for the BundleUserAPI
// The BundleUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BundleUserAPIServicer to perform the required actions, then write the service results to the http response.
type BundleUserAPIRouter interface {
	CreateUser(http.ResponseWriter, *http.Request)
	DeleteUser(http.ResponseWriter, *http.Request)
}

// CadenceProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the CadenceProvisioningV2API
// The CadenceProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a CadenceProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type CadenceProvisioningV2APIRouter interface {
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2Post(http.ResponseWriter, *http.Request)
}

// ClusterExclusionWindowV2APIRouter defines the required methods for binding the api requests to a responses for the ClusterExclusionWindowV2API
// The ClusterExclusionWindowV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ClusterExclusionWindowV2APIServicer to perform the required actions, then write the service results to the http response.
type ClusterExclusionWindowV2APIRouter interface {
	ClusterManagementV2DataSourcesClusterClusterIdExclusionWindowsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesExclusionWindowsV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesExclusionWindowsV2WindowIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesExclusionWindowsV2WindowIdGet(http.ResponseWriter, *http.Request)
}

// ClusterMaintenanceEventsV2APIRouter defines the required methods for binding the api requests to a responses for the ClusterMaintenanceEventsV2API
// The ClusterMaintenanceEventsV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ClusterMaintenanceEventsV2APIServicer to perform the required actions, then write the service results to the http response.
type ClusterMaintenanceEventsV2APIRouter interface {
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2InProgressV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2PastV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2UpcomingV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsMaintenanceEventsMaintenanceEventIdV2RescheduleMaintenanceEventV2Put(http.ResponseWriter, *http.Request)
}

// ClusterNetworkFirewallRuleV2APIRouter defines the required methods for binding the api requests to a responses for the ClusterNetworkFirewallRuleV2API
// The ClusterNetworkFirewallRuleV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ClusterNetworkFirewallRuleV2APIServicer to perform the required actions, then write the service results to the http response.
type ClusterNetworkFirewallRuleV2APIRouter interface {
	ClusterManagementV2DataSourcesClusterClusterIdNetworkFirewallRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2Post(http.ResponseWriter, *http.Request)
}

// ClusterSettingsV2APIRouter defines the required methods for binding the api requests to a responses for the ClusterSettingsV2API
// The ClusterSettingsV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ClusterSettingsV2APIServicer to perform the required actions, then write the service results to the http response.
type ClusterSettingsV2APIRouter interface {
	ClusterManagementV2OperationsClustersV2ClusterIdChangeSettingsV2Put(http.ResponseWriter, *http.Request)
}

// GCPVPCPeerV2APIRouter defines the required methods for binding the api requests to a responses for the GCPVPCPeerV2API
// The GCPVPCPeerV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a GCPVPCPeerV2APIServicer to perform the required actions, then write the service results to the http response.
type GCPVPCPeerV2APIRouter interface {
	ClusterManagementV2DataSourcesProvidersGcpVpcPeersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdGet(http.ResponseWriter, *http.Request)
}

// KarapaceRestProxyUserAPIRouter defines the required methods for binding the api requests to a responses for the KarapaceRestProxyUserAPI
// The KarapaceRestProxyUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a KarapaceRestProxyUserAPIServicer to perform the required actions, then write the service results to the http response.
type KarapaceRestProxyUserAPIRouter interface {
	ClusterManagementV2DataSourcesKarapaceRestProxyClusterClusterIdKarapaceRestProxyUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKarapaceRestProxyClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(http.ResponseWriter, *http.Request)
}

// KarapaceSchemaRegistryUserAPIRouter defines the required methods for binding the api requests to a responses for the KarapaceSchemaRegistryUserAPI
// The KarapaceSchemaRegistryUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a KarapaceSchemaRegistryUserAPIServicer to perform the required actions, then write the service results to the http response.
type KarapaceSchemaRegistryUserAPIRouter interface {
	ClusterManagementV2DataSourcesKarapaceSchemaRegistryClusterClusterIdKarapaceSchemaRegistryUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsKarapaceSchemaRegistryClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(http.ResponseWriter, *http.Request)
}

// OpenSearchEgressRulesV2APIRouter defines the required methods for binding the api requests to a responses for the OpenSearchEgressRulesV2API
// The OpenSearchEgressRulesV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a OpenSearchEgressRulesV2APIServicer to perform the required actions, then write the service results to the http response.
type OpenSearchEgressRulesV2APIRouter interface {
	ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post(http.ResponseWriter, *http.Request)
}

// OpenSearchProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the OpenSearchProvisioningV2API
// The OpenSearchProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a OpenSearchProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type OpenSearchProvisioningV2APIRouter interface {
	ClusterManagementV2DataSourcesApplicationsOpensearchClustersV2ClusterIdListBackupsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsOpensearchClustersV2ClusterIdTriggerBackupV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsOpensearchRestoreV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post(http.ResponseWriter, *http.Request)
}

// PostgreSQLConfigurationV2APIRouter defines the required methods for binding the api requests to a responses for the PostgreSQLConfigurationV2API
// The PostgreSQLConfigurationV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a PostgreSQLConfigurationV2APIServicer to perform the required actions, then write the service results to the http response.
type PostgreSQLConfigurationV2APIRouter interface {
	ClusterManagementV2DataSourcesPostgresqlClusterClusterIdConfigurationsGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2Post(http.ResponseWriter, *http.Request)
}

// PostgreSQLProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the PostgreSQLProvisioningV2API
// The PostgreSQLProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a PostgreSQLProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type PostgreSQLProvisioningV2APIRouter interface {
	ClusterManagementV2DataSourcesApplicationsPostgresqlClustersV2ClusterIdListBackupsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresClustersV2ClusterIdTriggerBackupV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresRestoreV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2Post(http.ResponseWriter, *http.Request)
}

// PostgreSQLReloadOperationV2APIRouter defines the required methods for binding the api requests to a responses for the PostgreSQLReloadOperationV2API
// The PostgreSQLReloadOperationV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a PostgreSQLReloadOperationV2APIServicer to perform the required actions, then write the service results to the http response.
type PostgreSQLReloadOperationV2APIRouter interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdReloadGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadPost(http.ResponseWriter, *http.Request)
}

// PostgreSQLUserV2APIRouter defines the required methods for binding the api requests to a responses for the PostgreSQLUserV2API
// The PostgreSQLUserV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a PostgreSQLUserV2APIServicer to perform the required actions, then write the service results to the http response.
type PostgreSQLUserV2APIRouter interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdUpdateDefaultUserPasswordPut(http.ResponseWriter, *http.Request)
}

// RedisProvisioningV2APIRouter defines the required methods for binding the api requests to a responses for the RedisProvisioningV2API
// The RedisProvisioningV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a RedisProvisioningV2APIServicer to perform the required actions, then write the service results to the http response.
type RedisProvisioningV2APIRouter interface {
	ClusterManagementV2OperationsApplicationsRedisClustersV2ClusterIdTriggerBackupV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsApplicationsRedisRestoreV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdPut(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2Post(http.ResponseWriter, *http.Request)
}

// RedisUserV2APIRouter defines the required methods for binding the api requests to a responses for the RedisUserV2API
// The RedisUserV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a RedisUserV2APIServicer to perform the required actions, then write the service results to the http response.
type RedisUserV2APIRouter interface {
	ClusterManagementV2DataSourcesRedisClusterClusterIdUsersV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2Post(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdDelete(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdGet(http.ResponseWriter, *http.Request)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdPut(http.ResponseWriter, *http.Request)
}

// ResizeOperationsV2APIRouter defines the required methods for binding the api requests to a responses for the ResizeOperationsV2API
// The ResizeOperationsV2APIRouter implementation should parse necessary information from the http request,
// pass the data to a ResizeOperationsV2APIServicer to perform the required actions, then write the service results to the http response.
type ResizeOperationsV2APIRouter interface {
	ClusterManagementV2DataSourcesClusterDataCentresV2ClusterDataCentreIdResizeOperationsV2Get(http.ResponseWriter, *http.Request)
	ClusterManagementV2OperationsResizeOperationsV2OperationIdCancelV2Delete(http.ResponseWriter, *http.Request)
}

// AWSEncryptionKeyV2APIServicer defines the api actions for the AWSEncryptionKeyV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSEncryptionKeyV2APIServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsEncryptionKeysV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2OperationsProvidersAwsEncryptionKeysV2EncryptionKeyIdValidateV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2EncryptionKeyIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsEncryptionKeysV2Post(context.Context, AwsEncryptionKeyV2) (ImplResponse, error)
}

// AWSEndpointServicePrincipalsV2APIServicer defines the api actions for the AWSEndpointServicePrincipalsV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSEndpointServicePrincipalsV2APIServicer interface {
	ClusterManagementV2DataSourcesClusterDataCenterClusterDataCenterIdAwsEndpointServicePrincipalsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2Post(context.Context, IamPrincipalArnV2) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesAwsEndpointServicePrincipalsV2PrincipalIdGet(context.Context, string) (ImplResponse, error)
}

// AWSSecurityGroupFirewallRuleV2APIServicer defines the api actions for the AWSSecurityGroupFirewallRuleV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSSecurityGroupFirewallRuleV2APIServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsAwsClusterClusterIdSecurityGroupFirewallRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2FirewallRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsSecurityGroupFirewallRulesV2Post(context.Context, AwsSecurityGroupFirewallRuleV2) (ImplResponse, error)
}

// AWSVPCPeerV2APIServicer defines the api actions for the AWSVPCPeerV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AWSVPCPeerV2APIServicer interface {
	ClusterManagementV2DataSourcesProvidersAwsVpcPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2Post(context.Context, AwsVpcPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAwsVpcPeersV2VpcPeerIdPut(context.Context, string, AwsVpcPeerUpdateV2) (ImplResponse, error)
}

// AccountClusterListV2APIServicer defines the api actions for the AccountClusterListV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AccountClusterListV2APIServicer interface {
	ClusterManagementV2DataSourcesClustersV2Get(context.Context) (ImplResponse, error)
}

// ApacheCassandraProvisioningV2APIServicer defines the api actions for the ApacheCassandraProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheCassandraProvisioningV2APIServicer interface {
	ClusterManagementV2DataSourcesApplicationsCassandraClustersV2ClusterIdListBackupsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsCassandraClustersV2ClusterIdTriggerBackupV2Post(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsCassandraRestoreV2Post(context.Context, CassandraClusterRestoreV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2ClusterIdPut(context.Context, string, CassandraClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCassandraClustersV2Post(context.Context, CassandraClusterV2) (ImplResponse, error)
}

// ApacheKafkaACLV2APIServicer defines the api actions for the ApacheKafkaACLV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaACLV2APIServicer interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdAclsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2KafkaAclIdPut(context.Context, string, KafkaAclListV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaAclsV2Post(context.Context, KafkaAclListV2) (ImplResponse, error)
}

// ApacheKafkaConnectMirrorV2APIServicer defines the api actions for the ApacheKafkaConnectMirrorV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaConnectMirrorV2APIServicer interface {
	ClusterManagementV2DataSourcesKafkaConnectClusterClusterIdMirrorsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2MirrorIdPut(context.Context, string, KafkaConnectMirrorUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectMirrorsV2Post(context.Context, KafkaConnectMirrorV2) (ImplResponse, error)
}

// ApacheKafkaConnectProvisioningV2APIServicer defines the api actions for the ApacheKafkaConnectProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaConnectProvisioningV2APIServicer interface {
	ClusterManagementV2OperationsApplicationsKafkaConnectClustersV2ClusterIdSyncCustomKafkaConnectorsV2Put(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2ClusterIdPut(context.Context, string, KafkaConnectClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaConnectClustersV2Post(context.Context, KafkaConnectClusterV2) (ImplResponse, error)
}

// ApacheKafkaProvisioningV2APIServicer defines the api actions for the ApacheKafkaProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaProvisioningV2APIServicer interface {
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut(context.Context, string, KafkaClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post(context.Context, KafkaClusterV2) (ImplResponse, error)
}

// ApacheKafkaRestProxyUserAPIServicer defines the api actions for the ApacheKafkaRestProxyUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaRestProxyUserAPIServicer interface {
	ClusterManagementV2DataSourcesKafkaRestProxyClusterClusterIdKafkaRestProxyUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKafkaRestProxyClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(context.Context, string, string, KafkaRestProxyUserPasswordV2) (ImplResponse, error)
}

// ApacheKafkaSchemaRegistryUserAPIServicer defines the api actions for the ApacheKafkaSchemaRegistryUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaSchemaRegistryUserAPIServicer interface {
	ClusterManagementV2DataSourcesKafkaSchemaRegistryClusterClusterIdKafkaSchemaRegistryUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKafkaSchemaRegistryClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(context.Context, string, string, KafkaSchemaRegistryUserPasswordV2) (ImplResponse, error)
}

// ApacheKafkaTopicV2APIServicer defines the api actions for the ApacheKafkaTopicV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaTopicV2APIServicer interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdTopicsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKafkaTopicsV2KafkaTopicIdModifyConfigsV2Put(context.Context, string, KafkaTopicConfigsV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2KafkaTopicIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaTopicsV2Post(context.Context, KafkaTopicV2) (ImplResponse, error)
}

// ApacheKafkaUserAPIServicer defines the api actions for the ApacheKafkaUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheKafkaUserAPIServicer interface {
	ClusterManagementV2DataSourcesKafkaClusterClusterIdUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2DataSourcesKafkaUsersKafkaUserIdCertificatesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKafkaUserCertificatesCertificateIdDownloadV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKafkaUserCertificatesRenewV2Post(context.Context, KafkaUserCertificateRenewalRequestV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2CertificateIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2CertificateIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUserCertificatesV2Post(context.Context, KafkaUserCertificateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2KafkaUserIdPut(context.Context, string, KafkaUserUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsKafkaUsersV2Post(context.Context, KafkaUserV2) (ImplResponse, error)
}

// ApacheZookeeperProvisioningV2APIServicer defines the api actions for the ApacheZookeeperProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApacheZookeeperProvisioningV2APIServicer interface {
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post(context.Context, ApacheZookeeperClusterV2) (ImplResponse, error)
}

// AzureVnetPeerV2APIServicer defines the api actions for the AzureVnetPeerV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AzureVnetPeerV2APIServicer interface {
	ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post(context.Context, AzureVnetPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
}

// BundleUserAPIServicer defines the api actions for the BundleUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BundleUserAPIServicer interface {
	CreateUser(context.Context, string, string, BundleUserCreateRequest) (ImplResponse, error)
	DeleteUser(context.Context, string, string, BundleUserDeleteRequest) (ImplResponse, error)
}

// CadenceProvisioningV2APIServicer defines the api actions for the CadenceProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CadenceProvisioningV2APIServicer interface {
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2ClusterIdPut(context.Context, string, CadenceClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsCadenceClustersV2Post(context.Context, CadenceClusterV2) (ImplResponse, error)
}

// ClusterExclusionWindowV2APIServicer defines the api actions for the ClusterExclusionWindowV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClusterExclusionWindowV2APIServicer interface {
	ClusterManagementV2DataSourcesClusterClusterIdExclusionWindowsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesExclusionWindowsV2Post(context.Context, ClusterExclusionWindowV2) (ImplResponse, error)
	ClusterManagementV2ResourcesExclusionWindowsV2WindowIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesExclusionWindowsV2WindowIdGet(context.Context, string) (ImplResponse, error)
}

// ClusterMaintenanceEventsV2APIServicer defines the api actions for the ClusterMaintenanceEventsV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClusterMaintenanceEventsV2APIServicer interface {
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2InProgressV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2PastV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2DataSourcesClusterClusterIdMaintenanceEventsV2UpcomingV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsMaintenanceEventsMaintenanceEventIdV2RescheduleMaintenanceEventV2Put(context.Context, string, ClusterMaintenanceEventScheduleUpdateV2) (ImplResponse, error)
}

// ClusterNetworkFirewallRuleV2APIServicer defines the api actions for the ClusterNetworkFirewallRuleV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClusterNetworkFirewallRuleV2APIServicer interface {
	ClusterManagementV2DataSourcesClusterClusterIdNetworkFirewallRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2FirewallRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesNetworkFirewallRulesV2Post(context.Context, ClusterNetworkFirewallRuleV2) (ImplResponse, error)
}

// ClusterSettingsV2APIServicer defines the api actions for the ClusterSettingsV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClusterSettingsV2APIServicer interface {
	ClusterManagementV2OperationsClustersV2ClusterIdChangeSettingsV2Put(context.Context, string, ClusterSettingsUpdateV2) (ImplResponse, error)
}

// GCPVPCPeerV2APIServicer defines the api actions for the GCPVPCPeerV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GCPVPCPeerV2APIServicer interface {
	ClusterManagementV2DataSourcesProvidersGcpVpcPeersV2Get(context.Context) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2Post(context.Context, GcpVpcPeerV2) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesProvidersGcpVpcPeersV2VpcPeerIdGet(context.Context, string) (ImplResponse, error)
}

// KarapaceRestProxyUserAPIServicer defines the api actions for the KarapaceRestProxyUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KarapaceRestProxyUserAPIServicer interface {
	ClusterManagementV2DataSourcesKarapaceRestProxyClusterClusterIdKarapaceRestProxyUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKarapaceRestProxyClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(context.Context, string, string, KarapaceRestProxyUserPasswordV2) (ImplResponse, error)
}

// KarapaceSchemaRegistryUserAPIServicer defines the api actions for the KarapaceSchemaRegistryUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KarapaceSchemaRegistryUserAPIServicer interface {
	ClusterManagementV2DataSourcesKarapaceSchemaRegistryClusterClusterIdKarapaceSchemaRegistryUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsKarapaceSchemaRegistryClustersV2ClusterIdUsersV2UserNameChangePasswordV2Put(context.Context, string, string, KarapaceSchemaRegistryUserPasswordV2) (ImplResponse, error)
}

// OpenSearchEgressRulesV2APIServicer defines the api actions for the OpenSearchEgressRulesV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OpenSearchEgressRulesV2APIServicer interface {
	ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post(context.Context, OpenSearchEgressRuleV2) (ImplResponse, error)
}

// OpenSearchProvisioningV2APIServicer defines the api actions for the OpenSearchProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OpenSearchProvisioningV2APIServicer interface {
	ClusterManagementV2DataSourcesApplicationsOpensearchClustersV2ClusterIdListBackupsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsOpensearchClustersV2ClusterIdTriggerBackupV2Post(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsOpensearchRestoreV2Post(context.Context, OpenSearchClusterRestoreV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut(context.Context, string, OpenSearchClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post(context.Context, OpenSearchClusterV2) (ImplResponse, error)
}

// PostgreSQLConfigurationV2APIServicer defines the api actions for the PostgreSQLConfigurationV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgreSQLConfigurationV2APIServicer interface {
	ClusterManagementV2DataSourcesPostgresqlClusterClusterIdConfigurationsGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2ConfigurationIdPut(context.Context, string, PostgresqlConfigurationPropertyUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlConfigurationsV2Post(context.Context, PostgresqlConfigurationPropertyV2) (ImplResponse, error)
}

// PostgreSQLProvisioningV2APIServicer defines the api actions for the PostgreSQLProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgreSQLProvisioningV2APIServicer interface {
	ClusterManagementV2DataSourcesApplicationsPostgresqlClustersV2ClusterIdListBackupsV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresClustersV2ClusterIdTriggerBackupV2Post(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresRestoreV2Post(context.Context, ClusterRestoreV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2ClusterIdPut(context.Context, string, PostgresqlClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsPostgresqlClustersV2Post(context.Context, PostgresqlClusterV2) (ImplResponse, error)
}

// PostgreSQLReloadOperationV2APIServicer defines the api actions for the PostgreSQLReloadOperationV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgreSQLReloadOperationV2APIServicer interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdReloadGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsPostgresqlNodesV2NodeIdReloadPost(context.Context, string) (ImplResponse, error)
}

// PostgreSQLUserV2APIServicer defines the api actions for the PostgreSQLUserV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostgreSQLUserV2APIServicer interface {
	ClusterManagementV2OperationsApplicationsPostgresqlClustersV2ClusterIdUpdateDefaultUserPasswordPut(context.Context, string, PostgresqlUserSummary) (ImplResponse, error)
}

// RedisProvisioningV2APIServicer defines the api actions for the RedisProvisioningV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RedisProvisioningV2APIServicer interface {
	ClusterManagementV2OperationsApplicationsRedisClustersV2ClusterIdTriggerBackupV2Post(context.Context, string) (ImplResponse, error)
	ClusterManagementV2OperationsApplicationsRedisRestoreV2Post(context.Context, ClusterRestoreV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2ClusterIdPut(context.Context, string, RedisClusterUpdateV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisClustersV2Post(context.Context, RedisClusterV2) (ImplResponse, error)
}

// RedisUserV2APIServicer defines the api actions for the RedisUserV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RedisUserV2APIServicer interface {
	ClusterManagementV2DataSourcesRedisClusterClusterIdUsersV2Get(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2Post(context.Context, RedisUserV2) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdDelete(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdGet(context.Context, string) (ImplResponse, error)
	ClusterManagementV2ResourcesApplicationsRedisUsersV2RedisUserIdPut(context.Context, string, RedisUserPasswordV2) (ImplResponse, error)
}

// ResizeOperationsV2APIServicer defines the api actions for the ResizeOperationsV2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ResizeOperationsV2APIServicer interface {
	ClusterManagementV2DataSourcesClusterDataCentresV2ClusterDataCentreIdResizeOperationsV2Get(context.Context, string, bool) (ImplResponse, error)
	ClusterManagementV2OperationsResizeOperationsV2OperationIdCancelV2Delete(context.Context, string) (ImplResponse, error)
}
