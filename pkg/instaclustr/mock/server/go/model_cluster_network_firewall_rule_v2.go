/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// ClusterNetworkFirewallRuleV2 - Definition of an CIDR based firewall rule to be applied to a cluster.
type ClusterNetworkFirewallRuleV2 struct {

	// The reason (if needed) for the deferred status of the cluster network firewall rule.
	DeferredReason string `json:"deferredReason,omitempty"`

	// ID of the cluster for the cluster network firewall rule.
	ClusterId string `json:"clusterId"`

	// ID of the cluster network firewall rule.
	Id string `json:"id,omitempty"`

	Type FirewallRuleTypesV2 `json:"type"`

	// The network of the cluster network firewall rule.
	Network string `json:"network"`

	// The status of the cluster network firewall rule.
	Status string `json:"status,omitempty"`
}

// AssertClusterNetworkFirewallRuleV2Required checks if the required fields are not zero-ed
func AssertClusterNetworkFirewallRuleV2Required(obj ClusterNetworkFirewallRuleV2) error {
	elements := map[string]interface{}{
		"clusterId": obj.ClusterId,
		"type":      obj.Type,
		"network":   obj.Network,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseClusterNetworkFirewallRuleV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ClusterNetworkFirewallRuleV2 (e.g. [][]ClusterNetworkFirewallRuleV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseClusterNetworkFirewallRuleV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aClusterNetworkFirewallRuleV2, ok := obj.(ClusterNetworkFirewallRuleV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertClusterNetworkFirewallRuleV2Required(aClusterNetworkFirewallRuleV2)
	})
}
