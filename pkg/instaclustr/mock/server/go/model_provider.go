/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Provider struct {

	// Provider name
	Name string `json:"name"`

	// For customers running in their own account. Your provider account can be found on the Create Cluster page on the console, or the “Provider Account” property on any existing cluster. For customers running in Instaclustr account, this property may be omitted.
	AccountName string `json:"accountName,omitempty"`

	// <b>AWS</b>: VPC ID to provision data centre into, cluster network must match the IPv4 CIDR block of the specified VPC.<br/> <b>GCP</b>: Network name or a relative Network or Subnetwork URI e.g. projects/my-project/regions/us-central1/subnetworks/my-subnet, cluster network must match the IPv4 CIDR block of the specified subnet.
	CustomVirtualNetworkId string `json:"customVirtualNetworkId,omitempty"`

	// <b>AWS_VPC, GCP, AZURE and AZURE_AZ only</b>. If specified, the value is a map from tag key to value. For AWS_VPC restrictions, refer to the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions\" target=\"_blank\">AWS User Guide</a>. Tags are defined per cluster and will be applied to every instance in the cluster.
	Tags map[string]interface{} `json:"tags,omitempty"`

	// <b>AZURE only</b>. If specified, the value is the name for an Azure Resource Group which the resources will be provisioned into.
	ResourceGroup string `json:"resourceGroup,omitempty"`

	// <b>AWS_VPC only</b>. Specify a KMS encryption key to encrypt data on nodes. KMS encryption key must be set in Account settings before provisioning an encrypted cluster.
	DiskEncryptionKey string `json:"diskEncryptionKey,omitempty"`
}

// AssertProviderRequired checks if the required fields are not zero-ed
func AssertProviderRequired(obj Provider) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertProviderConstraints checks if the values respects the defined constraints
func AssertProviderConstraints(obj Provider) error {
	return nil
}
