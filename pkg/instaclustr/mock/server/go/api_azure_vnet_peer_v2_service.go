/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
	"sync"

	"github.com/google/uuid"
)

// AzureVnetPeerV2APIService is a service that implements the logic for the AzureVnetPeerV2APIServicer
// This service should implement the business logic for every endpoint for the AzureVnetPeerV2API API.
// Include any external packages or services that will be required by this service.
type AzureVnetPeerV2APIService struct {
	mu    sync.RWMutex
	peers map[string]*AzureVnetPeerV2
}

// NewAzureVnetPeerV2APIService creates a default api service
func NewAzureVnetPeerV2APIService() AzureVnetPeerV2APIServicer {
	return &AzureVnetPeerV2APIService{peers: map[string]*AzureVnetPeerV2{}}
}

// ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get - List all Azure VNet Peering requests
func (s *AzureVnetPeerV2APIService) ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get(ctx context.Context) (ImplResponse, error) {
	// TODO - update ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get with the required logic for this service method.
	// Add api_azure_vnet_peer_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []AccountAzureVnetPeersV2{}) or use other options such as http.Ok ...
	// return Response(200, []AccountAzureVnetPeersV2{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ClusterManagementV2DataSourcesProvidersAzureVnetPeersV2Get method not implemented")
}

// ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post - Create Azure Vnet Peering Request
func (s *AzureVnetPeerV2APIService) ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post(ctx context.Context, azureVnetPeerV2 AzureVnetPeerV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesProvidersAzureVnetPeersV2Post with the required logic for this service method.
	// Add api_azure_vnet_peer_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(202, AzureVnetPeerV2{}) or use other options such as http.Ok ...
	// return Response(202, AzureVnetPeerV2{}), nil

	s.mu.Lock()
	defer s.mu.Unlock()

	id, err := uuid.NewUUID()
	if err != nil {
		return Response(http.StatusInternalServerError, nil), err
	}

	azureVnetPeerV2.Id = id.String()

	s.peers[azureVnetPeerV2.Id] = &azureVnetPeerV2

	return Response(http.StatusAccepted, &azureVnetPeerV2), nil
}

// ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete - Delete Azure Vnet Peering Connection
func (s *AzureVnetPeerV2APIService) ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete(ctx context.Context, vpcPeerId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdDelete with the required logic for this service method.
	// Add api_azure_vnet_peer_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorListResponseV2{}), nil

	s.mu.Lock()
	defer s.mu.Unlock()

	_, exists := s.peers[vpcPeerId]
	if !exists {
		return Response(http.StatusNotFound, nil), nil
	}

	delete(s.peers, vpcPeerId)

	return Response(http.StatusNoContent, nil), nil
}

// ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet - Get Azure Vnet Peering Connection info
func (s *AzureVnetPeerV2APIService) ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet(ctx context.Context, vpcPeerId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesProvidersAzureVnetPeersV2VpcPeerIdGet with the required logic for this service method.
	// Add api_azure_vnet_peer_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AzureVnetPeerV2{}) or use other options such as http.Ok ...
	// return Response(200, AzureVnetPeerV2{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorListResponseV2{}), nil

	s.mu.Lock()
	defer s.mu.Unlock()

	peer, exists := s.peers[vpcPeerId]
	if !exists {
		return Response(http.StatusNotFound, nil), nil
	}

	return Response(http.StatusOK, peer), nil
}
