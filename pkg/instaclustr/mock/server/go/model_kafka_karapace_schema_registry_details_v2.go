/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaKarapaceSchemaRegistryDetailsV2 -
type KafkaKarapaceSchemaRegistryDetailsV2 struct {

	// Adds the specified version of Kafka Schema Registry to the Kafka cluster. Available versions: <ul> <li>`3.4.3`</li> </ul>
	Version string `json:"version"`
}

// AssertKafkaKarapaceSchemaRegistryDetailsV2Required checks if the required fields are not zero-ed
func AssertKafkaKarapaceSchemaRegistryDetailsV2Required(obj KafkaKarapaceSchemaRegistryDetailsV2) error {
	elements := map[string]interface{}{
		"version": obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaKarapaceSchemaRegistryDetailsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaKarapaceSchemaRegistryDetailsV2 (e.g. [][]KafkaKarapaceSchemaRegistryDetailsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaKarapaceSchemaRegistryDetailsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaKarapaceSchemaRegistryDetailsV2, ok := obj.(KafkaKarapaceSchemaRegistryDetailsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaKarapaceSchemaRegistryDetailsV2Required(aKafkaKarapaceSchemaRegistryDetailsV2)
	})
}
