/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// OpenSearchEgressRulesV2APIService is a service that implements the logic for the OpenSearchEgressRulesV2APIServicer
// This service should implement the business logic for every endpoint for the OpenSearchEgressRulesV2API API.
// Include any external packages or services that will be required by this service.
type OpenSearchEgressRulesV2APIService struct {
}

// NewOpenSearchEgressRulesV2APIService creates a default api service
func NewOpenSearchEgressRulesV2APIService() OpenSearchEgressRulesV2APIServicer {
	return &OpenSearchEgressRulesV2APIService{}
}

// ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get - List all OpenSearch egress rules
func (s *OpenSearchEgressRulesV2APIService) ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get with the required logic for this service method.
	// Add api_open_search_egress_rules_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []OpenSearchEgressRulesV2{}) or use other options such as http.Ok ...
	// return Response(200, []OpenSearchEgressRulesV2{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponseV2{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponseV2{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponseV2{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ClusterManagementV2DataSourcesOpensearchClusterClusterIdEgressRulesV2Get method not implemented")
}

// ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete - Remove an existing egress rule for a given channel/destination ID
func (s *OpenSearchEgressRulesV2APIService) ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete(ctx context.Context, egressRuleId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete with the required logic for this service method.
	// Add api_open_search_egress_rules_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(400, ErrorListResponseV2{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorListResponseV2{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdDelete method not implemented")
}

// ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet - Retrieve an existing egress rule
func (s *OpenSearchEgressRulesV2APIService) ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet(ctx context.Context, egressRuleId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet with the required logic for this service method.
	// Add api_open_search_egress_rules_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OpenSearchEgressRuleV2{}) or use other options such as http.Ok ...
	// return Response(200, OpenSearchEgressRuleV2{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(400, ErrorListResponseV2{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponseV2{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2EgressRuleIdGet method not implemented")
}

// ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post - Add egress firewall rules for a notifications/alerting webhook
func (s *OpenSearchEgressRulesV2APIService) ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post(ctx context.Context, openSearchEgressRuleV2 OpenSearchEgressRuleV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post with the required logic for this service method.
	// Add api_open_search_egress_rules_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(202, OpenSearchEgressRuleV2{}) or use other options such as http.Ok ...
	// return Response(202, OpenSearchEgressRuleV2{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(400, ErrorListResponseV2{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponseV2{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponseV2{}), nil

	// TODO: Uncomment the next line to return response Response(503, ErrorListResponseV2{}) or use other options such as http.Ok ...
	// return Response(503, ErrorListResponseV2{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ClusterManagementV2ResourcesApplicationsOpensearchEgressRulesV2Post method not implemented")
}
