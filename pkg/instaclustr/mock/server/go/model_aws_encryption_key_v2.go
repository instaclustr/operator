/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// AwsEncryptionKeyV2 - Definition of a customer managed AWS KMS Key for use with at rest EBS encryption in Instaclustr managed clusters.
type AwsEncryptionKeyV2 struct {

	// Whether the encryption key is used by a cluster.
	InUse bool `json:"inUse,omitempty"`

	// Encryption key alias for display purposes.
	Alias string `json:"alias"`

	// ID of the encryption key.
	Id string `json:"id,omitempty"`

	// AWS ARN for the encryption key.
	Arn string `json:"arn"`

	// For customers running in their own account. Your provider account can be found on the Create Cluster page on the Instaclustr Console, or the \"Provider Account\" property on any existing cluster. For customers provisioning on Instaclustr's cloud provider accounts, this property may be omitted.
	ProviderAccountName string `json:"providerAccountName,omitempty"`
}

// AssertAwsEncryptionKeyV2Required checks if the required fields are not zero-ed
func AssertAwsEncryptionKeyV2Required(obj AwsEncryptionKeyV2) error {
	elements := map[string]interface{}{
		"alias": obj.Alias,
		"arn":   obj.Arn,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseAwsEncryptionKeyV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AwsEncryptionKeyV2 (e.g. [][]AwsEncryptionKeyV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAwsEncryptionKeyV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAwsEncryptionKeyV2, ok := obj.(AwsEncryptionKeyV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAwsEncryptionKeyV2Required(aAwsEncryptionKeyV2)
	})
}
