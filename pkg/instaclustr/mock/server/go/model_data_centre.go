/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type DataCentre struct {

	// Data centre id
	Id string `json:"id,omitempty"`

	// Data centre region
	Name string `json:"name,omitempty"`

	// User-provided cluster data centre name, default to be the data centre region if nothing provided
	CdcName string `json:"cdcName,omitempty"`

	// Data centre provider
	Provider string `json:"provider,omitempty"`

	// Cluster Data Centre status
	CdcStatus string `json:"cdcStatus,omitempty"`

	// Cluster data centre network
	CdcNetwork string `json:"cdcNetwork,omitempty"`

	Bundles []string `json:"bundles,omitempty"`

	// Client TLS Encryption
	ClientEncryption bool `json:"clientEncryption,omitempty"`

	// Password authenticaiton
	PasswordAuthentication bool `json:"passwordAuthentication,omitempty"`

	// User authorization
	UserAuthorization bool `json:"userAuthorization,omitempty"`

	// Private broadcast RPC address used
	UsePrivateBroadcastRPCAddress bool `json:"usePrivateBroadcastRPCAddress,omitempty"`

	// Private IP address
	PrivateIPOnly bool `json:"privateIPOnly,omitempty"`

	Nodes []Node `json:"nodes,omitempty"`

	// Number of nodes in cluster
	NodeCount int32 `json:"nodeCount,omitempty"`

	// Encryption key id
	EncryptionKeyId string `json:"encryptionKeyId,omitempty"`

	// Resize target node size
	ResizeTargetNodeSize string `json:"resizeTargetNodeSize,omitempty"`

	PrivateLink PrivateLink `json:"privateLink,omitempty"`
}

// AssertDataCentreRequired checks if the required fields are not zero-ed
func AssertDataCentreRequired(obj DataCentre) error {
	for _, el := range obj.Nodes {
		if err := AssertNodeRequired(el); err != nil {
			return err
		}
	}
	if err := AssertPrivateLinkRequired(obj.PrivateLink); err != nil {
		return err
	}
	return nil
}

// AssertDataCentreConstraints checks if the values respects the defined constraints
func AssertDataCentreConstraints(obj DataCentre) error {
	return nil
}
