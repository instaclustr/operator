/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// OpenSearchClusterUpdateV2 -
type OpenSearchClusterUpdateV2 struct {

	// Data nodes settings.
	DataNodes []OpenSearchDataNodeV2 `json:"dataNodes,omitempty"`

	// Cluster Manager nodes settings.
	ClusterManagerNodes []OpenSearchClusterManagerNodeV2 `json:"clusterManagerNodes,omitempty"`

	// Dashboards settings.
	OpensearchDashboards []OpenSearchDashboardV2 `json:"opensearchDashboards,omitempty"`
}

// AssertOpenSearchClusterUpdateV2Required checks if the required fields are not zero-ed
func AssertOpenSearchClusterUpdateV2Required(obj OpenSearchClusterUpdateV2) error {
	for _, el := range obj.DataNodes {
		if err := AssertOpenSearchDataNodeV2Required(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ClusterManagerNodes {
		if err := AssertOpenSearchClusterManagerNodeV2Required(el); err != nil {
			return err
		}
	}
	for _, el := range obj.OpensearchDashboards {
		if err := AssertOpenSearchDashboardV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseOpenSearchClusterUpdateV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of OpenSearchClusterUpdateV2 (e.g. [][]OpenSearchClusterUpdateV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseOpenSearchClusterUpdateV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aOpenSearchClusterUpdateV2, ok := obj.(OpenSearchClusterUpdateV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertOpenSearchClusterUpdateV2Required(aOpenSearchClusterUpdateV2)
	})
}
