/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaConnectCustomConnectorsGcpV2 -
type KafkaConnectCustomConnectorsGcpV2 struct {

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	PrivateKey string `json:"privateKey"`

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	ClientId string `json:"clientId"`

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	ClientEmail string `json:"clientEmail"`

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	ProjectId string `json:"projectId"`

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	StorageBucketName string `json:"storageBucketName"`

	// Access information for the GCP Storage bucket for kafka connect custom connectors.
	PrivateKeyId string `json:"privateKeyId"`
}

// AssertKafkaConnectCustomConnectorsGcpV2Required checks if the required fields are not zero-ed
func AssertKafkaConnectCustomConnectorsGcpV2Required(obj KafkaConnectCustomConnectorsGcpV2) error {
	elements := map[string]interface{}{
		"privateKey":        obj.PrivateKey,
		"clientId":          obj.ClientId,
		"clientEmail":       obj.ClientEmail,
		"projectId":         obj.ProjectId,
		"storageBucketName": obj.StorageBucketName,
		"privateKeyId":      obj.PrivateKeyId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaConnectCustomConnectorsGcpV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaConnectCustomConnectorsGcpV2 (e.g. [][]KafkaConnectCustomConnectorsGcpV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaConnectCustomConnectorsGcpV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaConnectCustomConnectorsGcpV2, ok := obj.(KafkaConnectCustomConnectorsGcpV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaConnectCustomConnectorsGcpV2Required(aKafkaConnectCustomConnectorsGcpV2)
	})
}
