/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
)

// KafkaClusterV2ApiService is a service that implements the logic for the KafkaClusterV2ApiServicer
// This service should implement the business logic for every endpoint for the KafkaClusterV2Api API.
// Include any external packages or services that will be required by this service.
type KafkaClusterV2ApiService struct {
	MockKafkaCluster *KafkaClusterV2
}

// NewKafkaClusterV2ApiService creates a default api service
func NewKafkaClusterV2ApiService() KafkaClusterV2ApiServicer {
	return &KafkaClusterV2ApiService{}
}

// ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete - Delete cluster
func (s *KafkaClusterV2ApiService) ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdDelete with the required logic for this service method.
	// Add api_kafka_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockKafkaCluster = nil
	return Response(204, nil), nil
}

// ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet - Get Kafka cluster details.
func (s *KafkaClusterV2ApiService) ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdGet with the required logic for this service method.
	// Add api_kafka_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	if s.MockKafkaCluster != nil {
		s.MockKafkaCluster.Status = RUNNING
	} else {
		return Response(404, nil), nil
	}

	return Response(200, s.MockKafkaCluster), nil
}

// ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut - Update Kafka Cluster Details
func (s *KafkaClusterV2ApiService) ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut(ctx context.Context, clusterId string, body KafkaClusterUpdateV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsKafkaClustersV2ClusterIdPut with the required logic for this service method.
	// Add api_kafka_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	newNode := []NodeDetailsV2{{
		NodeRoles:     []NodeRolesV2{"KAFKA_BROKER", "KAFKA_ZOOKEEPER"},
		Rack:          "us-east-1a",
		NodeSize:      body.DataCentres[0].NodeSize,
		PublicAddress: "54.146.160.89",
	}}

	s.MockKafkaCluster.DataCentres[0].Nodes = newNode

	return Response(202, nil), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorListResponseV2{}) or use other options such as http.Ok ...
	//return Response(404, ErrorListResponseV2{}), nil
}

// ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post - Create a Kafka cluster.
func (s *KafkaClusterV2ApiService) ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post(ctx context.Context, body KafkaClusterV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsKafkaClustersV2Post with the required logic for this service method.
	// Add api_kafka_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockKafkaCluster = &body
	s.MockKafkaCluster.Id = CreatedID
	return Response(202, s.MockKafkaCluster), nil
}
