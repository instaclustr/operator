/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
)

// ApacheZookeeperClusterV2ApiService is a service that implements the logic for the ApacheZookeeperClusterV2ApiServicer
// This service should implement the business logic for every endpoint for the ApacheZookeeperClusterV2Api API.
// Include any external packages or services that will be required by this service.
type ApacheZookeeperClusterV2ApiService struct {
	MockZookeeperCluster *ApacheZookeeperClusterV2
}

// NewApacheZookeeperClusterV2ApiService creates a default api service
func NewApacheZookeeperClusterV2ApiService() ApacheZookeeperClusterV2ApiServicer {
	return &ApacheZookeeperClusterV2ApiService{}
}

// ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete - Delete cluster
func (s *ApacheZookeeperClusterV2ApiService) ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdDelete with the required logic for this service method.
	// Add api_apache_zookeeper_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockZookeeperCluster = nil
	return Response(204, nil), nil
}

// ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet - Get Zookeeper cluster details.
func (s *ApacheZookeeperClusterV2ApiService) ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsZookeeperClustersV2ClusterIdGet with the required logic for this service method.
	// Add api_apache_zookeeper_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	if s.MockZookeeperCluster != nil {
		s.MockZookeeperCluster.Status = RUNNING
	} else {
		return Response(404, nil), nil
	}

	return Response(200, s.MockZookeeperCluster), nil
}

// ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post - Create a Zookeeper cluster.
func (s *ApacheZookeeperClusterV2ApiService) ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post(ctx context.Context, body ApacheZookeeperClusterV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsZookeeperClustersV2Post with the required logic for this service method.
	// Add api_apache_zookeeper_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	node := []NodeDetailsV2{{
		NodeSize: body.DataCentres[0].NodeSize,
	}}

	s.MockZookeeperCluster = &body
	s.MockZookeeperCluster.Id = CreatedID
	s.MockZookeeperCluster.DataCentres[0].Nodes = node

	return Response(202, s.MockZookeeperCluster), nil
}
