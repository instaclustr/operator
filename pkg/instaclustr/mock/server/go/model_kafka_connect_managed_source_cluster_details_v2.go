/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaConnectManagedSourceClusterDetailsV2 -
type KafkaConnectManagedSourceClusterDetailsV2 struct {

	// Whether or not to connect to source cluster's private IP addresses.
	UsePrivateIps bool `json:"usePrivateIps"`

	// Source kafka cluster id.
	SourceKafkaClusterId string `json:"sourceKafkaClusterId"`
}

// AssertKafkaConnectManagedSourceClusterDetailsV2Required checks if the required fields are not zero-ed
func AssertKafkaConnectManagedSourceClusterDetailsV2Required(obj KafkaConnectManagedSourceClusterDetailsV2) error {
	elements := map[string]interface{}{
		"usePrivateIps":        obj.UsePrivateIps,
		"sourceKafkaClusterId": obj.SourceKafkaClusterId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaConnectManagedSourceClusterDetailsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaConnectManagedSourceClusterDetailsV2 (e.g. [][]KafkaConnectManagedSourceClusterDetailsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaConnectManagedSourceClusterDetailsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaConnectManagedSourceClusterDetailsV2, ok := obj.(KafkaConnectManagedSourceClusterDetailsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaConnectManagedSourceClusterDetailsV2Required(aKafkaConnectManagedSourceClusterDetailsV2)
	})
}
