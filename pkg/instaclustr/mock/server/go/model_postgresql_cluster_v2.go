/*
 * Instaclustr API Documentation
 *
 *
 *
 * API version: Current
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PostgresqlClusterV2 - Definition of a managed Postgresql cluster that can be provisioned in Instaclustr.
type PostgresqlClusterV2 struct {

	// Creates a PCI compliant cluster, see [PCI Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
	PciComplianceMode bool `json:"pciComplianceMode,omitempty"`

	// Version of Postgresql to run on the cluster. Available versions: <ul> <li>`13.11.0`</li> <li>`13.12.0`</li> <li>`14.9.0`</li> <li>`13.10.0`</li> <li>`14.7.0`</li> <li>`14.8.0`</li> <li>`15.4.0`</li> <li>`15.2.0`</li> <li>`15.3.0`</li> </ul>
	PostgresqlVersion string `json:"postgresqlVersion"`

	// A description of the cluster
	Description string `json:"description,omitempty"`

	TwoFactorDelete []TwoFactorDeleteSettingsV2 `json:"twoFactorDelete,omitempty"`

	// Password of the default user created for the PostgreSQL cluster.
	DefaultUserPassword string `json:"defaultUserPassword,omitempty"`

	// List of data centre settings.
	DataCentres []PostgresqlDataCentreV2 `json:"dataCentres"`

	CurrentClusterOperationStatus CurrentClusterOperationStatusV2 `json:"currentClusterOperationStatus,omitempty"`

	// Create the PostgreSQL cluster with the selected replication mode, see [PostgreSQL replication mode] (https://www.instaclustr.com/support/documentation/postgresql/options/replication-mode/).
	SynchronousModeStrict bool `json:"synchronousModeStrict"`

	// Creates the cluster with private network only, see [Private Network Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
	PrivateNetworkCluster bool `json:"privateNetworkCluster"`

	// Name of the cluster.
	Name string `json:"name"`

	// Settings to determine how resize requests will be performed for the cluster.
	ResizeSettings []ResizeSettingsV2 `json:"resizeSettings,omitempty"`

	// ID of the cluster.
	Id string `json:"id,omitempty"`

	SlaTier SlaTierV2 `json:"slaTier"`

	// Status of the cluster.
	Status string `json:"status,omitempty"`
}

// AssertPostgresqlClusterV2Required checks if the required fields are not zero-ed
func AssertPostgresqlClusterV2Required(obj PostgresqlClusterV2) error {
	elements := map[string]interface{}{
		"postgresqlVersion":     obj.PostgresqlVersion,
		"dataCentres":           obj.DataCentres,
		"synchronousModeStrict": obj.SynchronousModeStrict,
		"privateNetworkCluster": obj.PrivateNetworkCluster,
		"name":                  obj.Name,
		"slaTier":               obj.SlaTier,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.TwoFactorDelete {
		if err := AssertTwoFactorDeleteSettingsV2Required(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DataCentres {
		if err := AssertPostgresqlDataCentreV2Required(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ResizeSettings {
		if err := AssertResizeSettingsV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPostgresqlClusterV2Constraints checks if the values respects the defined constraints
func AssertPostgresqlClusterV2Constraints(obj PostgresqlClusterV2) error {
	return nil
}
