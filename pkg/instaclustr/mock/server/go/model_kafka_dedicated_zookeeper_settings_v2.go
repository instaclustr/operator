/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// KafkaDedicatedZookeeperSettingsV2 -
type KafkaDedicatedZookeeperSettingsV2 struct {

	// Size of the nodes provisioned as dedicated Zookeeper nodes.
	ZookeeperNodeSize string `json:"zookeeperNodeSize"`

	// Number of dedicated Zookeeper node count, it must be 3 or 5.
	ZookeeperNodeCount int32 `json:"zookeeperNodeCount"`
}

// AssertKafkaDedicatedZookeeperSettingsV2Required checks if the required fields are not zero-ed
func AssertKafkaDedicatedZookeeperSettingsV2Required(obj KafkaDedicatedZookeeperSettingsV2) error {
	elements := map[string]interface{}{
		"zookeeperNodeSize":  obj.ZookeeperNodeSize,
		"zookeeperNodeCount": obj.ZookeeperNodeCount,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseKafkaDedicatedZookeeperSettingsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KafkaDedicatedZookeeperSettingsV2 (e.g. [][]KafkaDedicatedZookeeperSettingsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKafkaDedicatedZookeeperSettingsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKafkaDedicatedZookeeperSettingsV2, ok := obj.(KafkaDedicatedZookeeperSettingsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKafkaDedicatedZookeeperSettingsV2Required(aKafkaDedicatedZookeeperSettingsV2)
	})
}
