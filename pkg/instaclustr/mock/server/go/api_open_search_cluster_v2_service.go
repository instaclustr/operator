/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
)

// OpenSearchClusterV2ApiService is a service that implements the logic for the OpenSearchClusterV2ApiServicer
// This service should implement the business logic for every endpoint for the OpenSearchClusterV2Api API.
// Include any external packages or services that will be required by this service.
type OpenSearchClusterV2ApiService struct {
	MockOpenSearchCluster *OpenSearchClusterV2
}

// NewOpenSearchClusterV2ApiService creates a default api service
func NewOpenSearchClusterV2ApiService() OpenSearchClusterV2ApiServicer {
	return &OpenSearchClusterV2ApiService{}
}

// ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete - Delete cluster
func (s *OpenSearchClusterV2ApiService) ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdDelete with the required logic for this service method.
	// Add api_open_search_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockOpenSearchCluster = nil
	return Response(204, nil), nil
}

// ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet - Get OpenSearch cluster details
func (s *OpenSearchClusterV2ApiService) ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet(ctx context.Context, clusterId string) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdGet with the required logic for this service method.
	// Add api_open_search_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	if s.MockOpenSearchCluster != nil {
		s.MockOpenSearchCluster.Status = RUNNING
	} else {
		return Response(404, nil), nil
	}

	return Response(200, s.MockOpenSearchCluster), nil
}

// ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut - Update a OpenSearch cluster
func (s *OpenSearchClusterV2ApiService) ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut(ctx context.Context, clusterId string, body OpenSearchClusterUpdateV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchClustersV2ClusterIdPut with the required logic for this service method.
	// Add api_open_search_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockOpenSearchCluster.DataNodes = body.DataNodes
	s.MockOpenSearchCluster.OpensearchDashboards = body.OpensearchDashboards
	s.MockOpenSearchCluster.ClusterManagerNodes = body.ClusterManagerNodes

	return Response(202, nil), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorListResponseV2{}) or use other options such as http.Ok ...
	//return Response(404, ErrorListResponseV2{}), nil
}

// ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post - Create an OpenSearch cluster
func (s *OpenSearchClusterV2ApiService) ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post(ctx context.Context, body OpenSearchClusterV2) (ImplResponse, error) {
	// TODO - update ClusterManagementV2ResourcesApplicationsOpensearchClustersV2Post with the required logic for this service method.
	// Add api_open_search_cluster_v2_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	s.MockOpenSearchCluster = &body
	s.MockOpenSearchCluster.Id = CreatedID
	return Response(202, s.MockOpenSearchCluster), nil
}
