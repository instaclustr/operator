/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// CadenceDependencyV2 -
type CadenceDependencyV2 struct {

	// ID of the supporting Cluster's Cluster Data Centre
	DependencyCdcId string `json:"dependencyCdcId"`

	DependencyVpcType VpcTypeV2 `json:"dependencyVpcType"`
}

// AssertCadenceDependencyV2Required checks if the required fields are not zero-ed
func AssertCadenceDependencyV2Required(obj CadenceDependencyV2) error {
	elements := map[string]interface{}{
		"dependencyCdcId":   obj.DependencyCdcId,
		"dependencyVpcType": obj.DependencyVpcType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCadenceDependencyV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CadenceDependencyV2 (e.g. [][]CadenceDependencyV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCadenceDependencyV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCadenceDependencyV2, ok := obj.(CadenceDependencyV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCadenceDependencyV2Required(aCadenceDependencyV2)
	})
}
