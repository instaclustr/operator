/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// CadenceSharedProvisioningV2 - Settings for SHARED provisioning
type CadenceSharedProvisioningV2 struct {

	// Use Advanced Visibility
	UseAdvancedVisibility bool `json:"useAdvancedVisibility"`
}

// AssertCadenceSharedProvisioningV2Required checks if the required fields are not zero-ed
func AssertCadenceSharedProvisioningV2Required(obj CadenceSharedProvisioningV2) error {
	elements := map[string]interface{}{
		"useAdvancedVisibility": obj.UseAdvancedVisibility,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCadenceSharedProvisioningV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CadenceSharedProvisioningV2 (e.g. [][]CadenceSharedProvisioningV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCadenceSharedProvisioningV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCadenceSharedProvisioningV2, ok := obj.(CadenceSharedProvisioningV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCadenceSharedProvisioningV2Required(aCadenceSharedProvisioningV2)
	})
}
