/*
 * Instaclustr Cluster Management API
 *
 * Instaclustr Cluster Management API
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PostgresqlReloadOperationsV2 - PostgreSQL reload operations
type PostgresqlReloadOperationsV2 struct {

	// List of reload operations
	ReloadOperations []PostgresqlReloadOperationV2 `json:"reloadOperations"`

	// ID of the PostgreSQL cluster
	ClusterId string `json:"clusterId"`
}

// AssertPostgresqlReloadOperationsV2Required checks if the required fields are not zero-ed
func AssertPostgresqlReloadOperationsV2Required(obj PostgresqlReloadOperationsV2) error {
	elements := map[string]interface{}{
		"reloadOperations": obj.ReloadOperations,
		"clusterId":        obj.ClusterId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ReloadOperations {
		if err := AssertPostgresqlReloadOperationV2Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecursePostgresqlReloadOperationsV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PostgresqlReloadOperationsV2 (e.g. [][]PostgresqlReloadOperationsV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePostgresqlReloadOperationsV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPostgresqlReloadOperationsV2, ok := obj.(PostgresqlReloadOperationsV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPostgresqlReloadOperationsV2Required(aPostgresqlReloadOperationsV2)
	})
}
